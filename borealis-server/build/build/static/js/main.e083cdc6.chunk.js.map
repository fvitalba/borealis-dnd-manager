{"version":3,"sources":["controllers/drawImage.js","controllers/useCanvas.js","components/Canvas.js","components/Background.js","components/Drawing.js","components/Fog.js","components/Overlay.js","views/TokenView.js","components/Token.js","views/Cursor.js","controllers/guid.js","views/Button.js","components/ToggleButton.js","components/ToolButton.js","views/ToolSelectView.js","views/ToolControlsView.js","components/ToolControls.js","views/MapConfigView.js","components/MapConfig.js","views/MapToolView.js","views/HostTokenConfigView.js","views/GuestTokenConfigView.js","components/TokenConfig.js","views/SelectedTokensControlsView.js","views/TokenToolView.js","views/UserToolView.js","views/ControlPanelView.js","components/ControlPanel.js","views/GameView.js","components/Game.js","components/GameSocket.js","serviceWorker.js","index.js"],"names":["drawImage","url","which","map","context","resizeCanvases","updateMap","trim","length","Promise","resolve","reject","ctx","img","Image","onload","w","width","h","height","then","x","y","onerror","err","console","error","src","useCanvas","draw","gameState","options","canvasRef","useRef","useEffect","current","getContext","Canvas","id","rest","ref","Background","controlPanelState","setGameState","setControlPanelState","updateTokens","game","maps","mapId","undefined","onClick","e","toggleOnMaps","toggleOnTokens","token","$selected","imageUrl","name","Drawing","currMap","filter","parseInt","$id","getMap","currPath","globalCompositeOperation","beginPath","pointId","lineCap","fillStyle","drawColor","lineWidth","drawSize","strokeStyle","moveTo","lineTo","erease","className","clearRect","pathId","drawPaths","tool","stroke","Fog","fogOpacity","metadata","isHost","settings","ereaseFog","gradient","createRadialGradient","r2","r","addColorStop","fillRect","style","opacity","fogPaths","Overlay","overlayRef","TokenView","divStyle","classes","imgStyle","onMouseDown","onMouseUp","title","join","alt","Token","selectGameToken","showToken","ko","pc","left","top","indexOf","metaKey","Cursor","cursor","size","fontSize","role","u","guid","replace","c","window","crypto","getRandomValues","Uint32Array","Math","pow","toString","Button","value","isSelected","disabled","ToggleButton","toggleKey","ToolButton","ToolSelectView","ToolControlsView","onTextChangeGame","setFogOpacity","setSubtool","resetFog","resetDrawing","subtool","onChange","type","step","min","backgroundColor","fogRadius","max","ToolControls","key","target","newOpacity","isNaN","MapConfigView","mapConfigState","load","onTextChange","onIntegerChange","deleteMap","placeholder","MapConfig","websocket","useState","currentMap","mapElement","innerWidth","innerHeight","initialMapConfigState","setMapConfigState","updatedMaps","isFirstLoadDone","isFogLoaded","evt","confirm","newMaps","MapToolView","createMap","keys","Object","newMapName","$i","HostTokenConfigView","copy","onToggle","selectToken","onMapSelect","deleteToken","defaultValue","GuestTokenConfigView","TokenConfig","updateGameToken","update","callback","tokens","t","index","splice","SelectedTokensControlsView","TokenToolView","newTokenUrl","createToken","UserToolView","initAsDev","toggleOnUser","copyJson","pasteJson","setGameSettingsInt","setGameSettingsText","username","cursorsize","ControlPanelView","hidden","toggleHidden","socketRequestRefresh","pushRefresh","ControlPanel","notify","fromJson","requestRefresh","json","toJson","navigator","clipboard","writeText","catch","note1","readText","slice","close","newMap","tokensCopy","JSON","parse","stringify","push","$x0","$y0","GameView","onMouseMove","goneClass","deadline","Date","cursors","assign","time","initialControlPanelState","fogDiameter","Game","React","params","URLSearchParams","location","href","cursorSize","get","shareMouse","room","lastX","lastY","downX","downY","gen","initialGameState","currentPath","addEventListener","saveToLocalStorage","onResize","onKeyPress","onKeyDown","addCallbacks","receiveData","loadFromLocalStorage","removeEventListener","pushMaps","noEmit","additionalStateProperties","Array","isArray","toggleControlPanelVisibility","setPointerOutline","color","radius","arc","PI","closePath","document","activeElement","tagName","moveFactor","shiftKey","keyCode","preventDefault","cp","cpRef","code","currentTool","isEraser","data","log","from","to","messageType","updatedMapsWithDraw","drawPath","updatedMapsWithFog","fogPath","updatedMapsWithFogReset","updatedMapsWithDrawReset","newGameState","additionalAttrs","newGeneration","forEach","scrubObject","dumpMaps","values","localStorage","setItem","getItem","clearOverlay","pageX","pageY","updateCurrentFogPath","updateCurrentDrawPath","buttons","dragSelectedTokens","pushFog","pushDraw","test","getAttribute","tok","msg","ttl","tag","Notification","permission","note","setTimeout","requestPermission","spawnX","spawnY","tokenIdx","tokenSelected","multiSelect","mapsCopy","ex","removeItem","alert","handleError","require","config","K_SOCKET","K_INTERVAL","SOCKET_SERVER_PORT","process","PORT","GameSocket","host","protocol","this","clearInterval","socket","WebSocket","receiveCallback","ws","a","b","setup","bind","setInterval","readyState","OPEN","send","object","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e083cdc6.chunk.js","sourcesContent":["const drawImage = (url, which, map, context, resizeCanvases, updateMap) => {\n\t// Handle 'whiteboard' (no bg img)\n\tif (!url || url.trim().length === 0) {\n\t\tif (resizeCanvases) {\n\t\t\tresizeCanvases()\n\t\t} // Clear canvas\n\t\treturn Promise.resolve(map.width, map.height)\n\t}\n\n\t//Handle ordinary image\n\treturn new Promise((resolve, reject) => {\n\t\tconst ctx = context\n\t\tconst img = new Image()\n\t\timg.onload = () => {\n\t\t\tlet w = map.width\n\t\t\tlet h = map.height\n\t\t\tif (!w && !h) {\n\t\t\t\tw = img.width\n\t\t\t\th = img.height\n\t\t\t} else if (!w)\n\t\t\t\tw = h * img.width / img.height\n\t\t\telse if (!h)\n\t\t\t\th = w * img.height / img.width\n\t\t\tconst promise = resizeCanvases ? resizeCanvases(w, h) : Promise.resolve()\n\t\t\tpromise.then(() => {\n\t\t\t\tctx.drawImage(img, map.x || 0, map.y || 0, w, h)\n\t\t\t\tresolve(w, h)\n\t\t\t})\n\t\t}\n\t\timg.onerror = (err) => {\n\t\t\tconsole.error(`Unable to draw image.`, img.src)\n\t\t\tif (which) {\n\t\t\t\tconsole.error(`Deleting ${which}Url...`)\n\t\t\t\tupdateMap(map => delete map[`${which}Url`])\n\t\t\t}\n\t\t\treject(`Unable to draw ${which}Url`)\n\t\t}\n\t\timg.src = url\n\t})\n}\n\nexport default drawImage\n","import { useRef, useEffect } from 'react'\n\nconst useCanvas = (draw, gameState, options={}) => {\n\tconst canvasRef = useRef(null)\n\n\tuseEffect(() => {\n\t\tconst canvas = canvasRef.current\n\t\tconst context = canvas.getContext(options.context || '2d')\n\t\t\n\t\tdraw(context)\n\t}, [draw])\n\n\treturn canvasRef\n}\nexport default useCanvas\n","import React from 'react'\nimport useCanvas from '../controllers/useCanvas.js'\n\nconst Canvas = ({ id, draw, options, ...rest }) => {\n\tconst canvasRef = useCanvas(draw)\n\t\n\treturn (\n\t\t<canvas id={ id } ref={ canvasRef } { ...rest } />\n\t)\n}\n\nexport default Canvas\n","import React from 'react'\nimport drawImage from '../controllers/drawImage.js'\nimport Canvas from './Canvas.js'\n\nconst Background = ({ gameState, setGameState, controlPanelState, setControlPanelState, updateTokens, updateMap }) => {\n\tconst map = gameState.game.maps ? gameState.game.maps[gameState.game.mapId] : undefined\n\n\t//TODO: Verify that this is actually needed\n\t/*\n\tconst resizeCanvases = (w, h) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!w)\n\t\t\t\tw = (map && map.width) || window.innerWidth\n\t\t\tif (!h)\n\t\t\t\th = (map && map.height) || window.innerHeight\n\t\t\tlet canvases = document.querySelectorAll('canvas')\n\t\t\tconst noChangeNeeded = Array.from(canvases).reduce((prev, canv) => (\n\t\t\t\tprev && canv.width === w && canv.height === h\n\t\t\t), true)\n\t\t\tif (noChangeNeeded)\n\t\t\t\tresolve(w, h)\n\t\t\telse\n\t\t\t\tsetGameState({\n\t\t\t\t\t...gameState,\n\t\t\t\t\tgame: {\n\t\t\t\t\t\t...gameState.game,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\tisFogLoaded: false,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t})\n\t}\n\t*/\n\n\tconst draw = (ctx) => {\n\t\tif (!map) {\n\t\t\treturn\n\t\t}\n\t\tdrawImage(map.imageUrl, map.name, map, ctx, null, updateMap)\n\t}\n\n\tconst handleOnClick = (e) => {\n\t\tsetControlPanelState({\n\t\t\t...controlPanelState,\n\t\t\ttoggleOnMaps: false,\n\t\t\ttoggleOnTokens: false,\n\t\t}, () => updateTokens(token => token.$selected = false))\n\t}\n\n\treturn (\n\t\t<Canvas \n\t\t\tid='background' \n\t\t\tonClick={ handleOnClick } \n\t\t\twidth={ map ? map.width : 0 } \n\t\t\theight={ map ? map.height : 0 } \n\t\t\tdraw={ draw } />\n\t)\n}\n\nexport default Background\n","import React from 'react'\nimport Canvas from './Canvas.js'\n\nconst Drawing = ({ gameState }) => {\n\tconst width = gameState.game.width\n\tconst height = gameState.game.height\n\n\tconst getMap = () => {\n\t\tif (gameState.game.maps.length === 0)\n\t\t\treturn undefined\n\t\tconst currMap = gameState.game.maps.filter((map) => parseInt(map.$id) === parseInt(gameState.game.mapId))\n\t\treturn currMap.length > 0 ? currMap[0] : gameState.game.maps[0]\n\t}\n\tconst map = getMap()\n\n\tconst renderDrawingLayer = (ctx) => {\n\t\tif (!map) {\n\t\t\treturn\n\t\t}\n\t\tif (!ctx)\n\t\t\treturn\n\t\t\n\t\tctx.beginPath()\n\t\tctx.clearRect(0, 0, width, height)\n\t\tfor(let pathId = 0; pathId < map.drawPaths.length; pathId++) {\n\t\t\tconst currPath = map.drawPaths[pathId]\n\t\t\tconst tool = currPath.length > 0 ? currPath[0].tool : ''\n\t\t\tswitch (tool) {\n\t\t\t\tcase 'draw': \n\t\t\t\t\tdraw(ctx, currPath)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'erease':\n\t\t\t\t\terease(ctx, currPath)\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t\tctx.stroke()\n\t\t}\n\t}\n\n\tconst draw = (ctx, currPath) => {\n\t\tctx.globalCompositeOperation = 'source-over'\n\t\tctx.beginPath()\n\t\tfor (let pointId = 0; pointId < currPath.length; pointId++) {\n\t\t\tctx.lineCap = 'round'\n\t\t\tctx.fillStyle = currPath[pointId].drawColor\n\t\t\tctx.lineWidth = currPath[pointId].drawSize\n\t\t\tctx.strokeStyle = currPath[pointId].drawColor\n\t\t\tif (pointId === 0) {\n\t\t\t\tctx.moveTo(currPath[pointId].x, currPath[pointId].y)\n\t\t\t} else {\n\t\t\t\tctx.lineTo(currPath[pointId].x, currPath[pointId].y)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst erease = (ctx, currPath) => {\n\t\tctx.globalCompositeOperation = 'destination-out'\n\t\tctx.beginPath()\n\t\tfor (let pointId = 0; pointId < currPath.length; pointId++) {\n\t\t\tctx.lineCap = 'round'\n\t\t\tctx.lineWidth = currPath[pointId].drawSize\n\t\t\tif (pointId === 0) {\n\t\t\t\tctx.moveTo(currPath[pointId].x, currPath[pointId].y)\n\t\t\t} else {\n\t\t\t\tctx.lineTo(currPath[pointId].x, currPath[pointId].y)\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn (\n\t\t<Canvas \n\t\t\tid='drawing' \n\t\t\tclassName='passthrough' \n\t\t\twidth={ width } \n\t\t\theight={ height } \n\t\t\tdraw={ renderDrawingLayer } />\n\t)\n}\n\nexport default Drawing\n","import React from 'react'\nimport Canvas from './Canvas.js'\n\nconst Fog = ({ gameState }) => {\n\tconst fogOpacity = gameState.metadata.isHost ? gameState.settings.fogOpacity : 1\n\tconst width = gameState.game.width\n\tconst height = gameState.game.height\n\n\tconst getMap = () => {\n\t\tif (gameState.game.maps.length === 0)\n\t\t\treturn undefined\n\t\tconst currMap = gameState.game.maps.filter((map) => parseInt(map.$id) === parseInt(gameState.game.mapId))\n\t\treturn currMap.length > 0 ? currMap[0] : gameState.game.maps[0]\n\t}\n\tconst map = getMap()\n\n\tconst renderFogLayer = (ctx) => {\n\t\tif (!map) {\n\t\t\treturn\n\t\t}\n\t\tif (!ctx)\n\t\t\treturn\n\t\t\n\t\tctx.beginPath()\n\t\tctx.globalCompositeOperation = 'destination-over'\n\t\tctx.fillStyle = 'black'\n\t\tctx.fillRect(0, 0, width, height)\n\t\tfor(let pathId = 0; pathId < map.fogPaths.length; pathId++) {\n\t\t\tconst currPath = map.fogPaths[pathId]\n\t\t\tereaseFog(ctx, currPath)\n\t\t\tctx.stroke()\n\t\t}\n\t}\n\n\tconst ereaseFog = (ctx, currPath) => {\n\t\tctx.beginPath()\n\t\tctx.globalCompositeOperation = 'destination-out'\n\t\tlet gradient\n\t\tfor (let pointId = 0; pointId < currPath.length; pointId++) {\n\t\t\tgradient = ctx.createRadialGradient(currPath[pointId].x, currPath[pointId].y, currPath[pointId].r2 || 1, currPath[pointId].x, currPath[pointId].y, currPath[pointId].r*0.75)\n\t\t\tgradient.addColorStop(0, 'rgba(0,0,0,255)')\n\t\t\tgradient.addColorStop(1, 'rgba(0,0,0,0)')\n\t\t\tctx.fillStyle = gradient\n\t\t\tctx.fillRect(currPath[pointId].x-currPath[pointId].r, currPath[pointId].y-currPath[pointId].r, currPath[pointId].x+currPath[pointId].r, currPath[pointId].y+currPath[pointId].r)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Canvas \n\t\t\tid='fog' \n\t\t\tclassName='passthrough' \n\t\t\tstyle={{ opacity: fogOpacity }} \n\t\t\twidth={ width } \n\t\t\theight={ height } \n\t\t\tdraw={ renderFogLayer } />\n\t)\n}\n\nexport default Fog\n","import React from 'react';\n\n/****************************************************\n * Overlay Component                                *\n *                                                  *\n * This Component contains the users drawings, the  *\n * fog and also the cursor identifiers              *\n ****************************************************/\nconst Overlay = ({ gameState }) => {\n\tconst maps = gameState.game.maps\n\tconst map = maps[gameState.game.mapId] || undefined\n\tconst width = map ? map.width : gameState.game.width\n\tconst height = map ? map.height : gameState.game.height\n\tconst canvasRef = gameState.overlayRef\n\n\treturn (\n\t\t<canvas \n\t\t\tid='overlay' \n\t\t\tref={ canvasRef } \n\t\t\twidth={ width } \n\t\t\theight={ height } />\n\t)\n}\n\nexport default Overlay\n","const TokenView = ({ divStyle, token, classes, imgStyle, onMouseUp, onMouseDown }) => {\n\treturn (\n\t\t<div\n\t\t\tstyle={ divStyle }\n\t\t\ttitle={ token.name }\n\t\t\tclassName={ classes.join(' ') }\n\t\t\tonMouseDown={ (e) => onMouseDown(e) }>\n\t\t\t<img src={ token.url } alt={ token.name ||'' } style={ imgStyle } />\n\t\t</div>\n\t)\n}\n\nexport default TokenView\n","import React from 'react'\nimport TokenView from '../views/TokenView.js'\n\nconst Token = ({ gameState, token, selectGameToken }) => {\n\tconst isMoveTool = () => {\n\t\treturn gameState.settings.tool === 'move'\n\t}\n\n\tconst onMouseDown = (e) => {\n\t\tif (!isMoveTool())\n\t\t\treturn\n\t\t//TODO: Fix multi token selection\n\t\tif (!token.$selected)\n\t\t\tselectGameToken(token, true, e.metaKey)\n\t}\n\n\tconst isHost = gameState.metadata.isHost\n\tconst mapId = gameState.game.mapId\n\tlet showToken = false\n\n\tif (!token.url || !token.url.trim())\n\t\treturn null\n\t\n\tconst classes = [\n\t\t'token',\n\t\ttoken.ko && 'dead',\n\t\ttoken.pc ? 'pc' : 'npc',\n\t\ttoken.$selected && 'selected',\n\t\tisHost && !token.pc && 'grabbable',\n\t]\n\tconst divStyle = {\n\t\tleft: token.x || 0,\n\t\ttop: token.y || 0,\n\t}\n\tconst imgStyle = {\n\t\twidth: token.width || undefined,\n\t\theight: token.height || undefined,\n\t}\n\t\n\t//TODO: Verify if we can use a triple equal\n\tif ([undefined, null].indexOf(token.mapId) >= 0 || mapId === token.mapId) /* eslint-disable-line eqeqeq */\n\t\tshowToken = true\n\n\treturn (\n\t\tshowToken ?\n\t\t\t<TokenView \n\t\t\t\tdivStyle={ divStyle } \n\t\t\t\ttoken={ token } \n\t\t\t\tclasses={ classes } \n\t\t\t\timgStyle={ imgStyle } \n\t\t\t\tonMouseDown={ onMouseDown }\n\t\t\t/>\n\t\t: null\n\t)\n}\n\nexport default Token\n","const Cursor = ({ cursor, size, name }) => {\n\tconst divStyle = {\n\t\ttop: cursor.y,\n\t\tleft: cursor.x,\n\t}\n\tconst imgStyle = {\n\t\tfontSize: size || undefined,\n\t}\n\n\treturn (\n\t\t<div style={ divStyle } className='cursor' >\n\t\t\t<span role='img' aria-label='pointer' style={ imgStyle }>&#x1f5e1;</span>\n\t\t\t{ cursor.u || name }\n\t\t</div>\n\t)\n}\n\nexport default Cursor\n","const guid = () => {\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t\tconst r = (window.crypto.getRandomValues(new Uint32Array(1))[0] * Math.pow(2,-32) * 16) | 0\n\t\tconst v = c === 'x' ? r : (r & 0x3 | 0x8) /* eslint-disable-line no-mixed-operators */\n\t\treturn v.toString(16)\n\t})\n}\nexport default guid\n","function Button({ title, value, onClick, isSelected, style, disabled }) {\n\treturn (\n\t\t<button title={ title } onClick={ onClick } className={ isSelected ? 'selected' : null } style={ style } disabled={ disabled }>\n\t\t\t<span role='img' aria-label={ title }>{ value }</span>\n\t\t</button>\n\t)\n}\n\nexport default Button\n","import Button from '../views/Button.js'\n\nfunction ToggleButton({ controlPanelState, setControlPanelState, title, value }) {\n\tconst toggleKey = `toggleOn${title}`\n\tconst onClick = () => {\n\t\tsetControlPanelState({\n\t\t\t...controlPanelState,\n\t\t\t[toggleKey]: !controlPanelState[toggleKey],\n\t\t})\n\t}\n\tconst isSelected = controlPanelState[toggleKey]\n\treturn (\n\t\t<Button title={ title } value={ value } onClick={ onClick } isSelected={ isSelected } />\n\t)\n}\n\nexport default ToggleButton\n","import Button from '../views/Button.js'\n\nfunction ToolButton({ gameState, setGameState, title, value }) {\n\tconst isSelected = title === gameState.settings.tool\n\tconst onClick = () => {\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tsettings: {\n\t\t\t\t...gameState.settings,\n\t\t\t\ttool: title,\n\t\t\t}\n\t\t})\n\t}\n\treturn (\n\t\t<Button title={ title } value={ value.toString() } onClick={ onClick } isSelected={ isSelected } />\n\t)\n}\n\nexport default ToolButton\n","import ToolButton from '../components/ToolButton.js'\n\nconst ToolSelectView = ({ gameState, setGameState }) => {\n\treturn (\n\t\t<span id='tools'>\n\t\t\t<ToolButton title='move' value='&#x1f9f3;' gameState={ gameState } setGameState={ setGameState } />\n\t\t\t<ToolButton title='draw' value='&#x1f58d;' gameState={ gameState } setGameState={ setGameState } />\n\t\t\t<ToolButton title='fog'  value='&#x1f32c;' gameState={ gameState } setGameState={ setGameState } />\n\t\t</span>\n\t)\n}\n\nexport default ToolSelectView\n","import Button from './Button.js'\n\nconst ToolControlsView = ({ gameState, onTextChangeGame, setFogOpacity, setSubtool, resetFog, resetDrawing }) => {\n\tswitch (gameState.settings.tool) {\n\t\tcase 'draw':\n\t\t\treturn (\n\t\t\t\t<span>\n\t\t\t\t\t<Button title='eraser' value='&#x1f9fd;' onClick={ () => setSubtool('eraser') } isSelected={ gameState.settings.subtool === 'eraser' } />\n\t\t\t\t\t<Button title='pencil' value='&#x1f58d;' onClick={ () => setSubtool('pencil') } isSelected={ gameState.settings.subtool === 'pencil' } />\n\t\t\t\t\t<input size='3' title='draw size' value={ gameState.settings.drawSize } onChange={ (e) => onTextChangeGame('drawSize', e) } type='number' step='3' min='1' />\n\t\t\t\t\t<input size='3' title='draw color' value={ gameState.settings.drawColor } onChange={ (e) => onTextChangeGame('drawColor', e) } />\n\t\t\t\t\t<Button style={{ backgroundColor: gameState.settings.drawColor }} value='&#x1f58c;' disabled />\n\t\t\t\t\t<Button title='reset drawing' onClick={ resetDrawing } value='&#x1f300;' />\n\t\t\t\t</span>\n\t\t\t)\n\t\tcase 'move':\n\t\t\treturn null\n\t\tcase 'fog':\n\t\t\treturn (\n\t\t\t\t<span>\n\t\t\t\t\t<Button title='reset fog' onClick={ resetFog } value='&#x1f300;' />\n\t\t\t\t\t<input size='3' title='fog radius' value={ gameState.settings.fogRadius || 0 } onChange={ (e) => onTextChangeGame('fogRadius', e) } type='number' step='5' min='1' />\n\t\t\t\t\t<input size='3' title='fog opacity' step='0.05' min='0' max='1' value={ gameState.settings.fogOpacity } onChange={ (e) => setFogOpacity(e) } type='number' />\n\t\t\t\t</span>\n\t\t\t)\n\t\tdefault:\n\t\t\treturn null\n\t}\n}\n\nexport default ToolControlsView\n","import ToolControlsView from \"../views/ToolControlsView.js\"\n\nconst ToolControls = ({ gameState, setGameState, resetFog, resetDrawing }) => {\n\tconst setSubtool = (subtool) => {\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tsettings: {\n\t\t\t\t...gameState.settings,\n\t\t\t\tsubtool: subtool,\n\t\t\t}\n\t\t})\n\t}\n\n\tconst onTextChangeGame = (key, e) => {\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tsettings: {\n\t\t\t\t...gameState.settings,\n\t\t\t\t[key]: e.target.value,\n\t\t\t}\n\t\t})\n\t}\n\n\tconst setFogOpacity = (e) => {\n\t\tconst newOpacity = e.target.value\n\t\tif (!isNaN(newOpacity))\n\t\t\tsetGameState({\n\t\t\t\t...gameState,\n\t\t\t\tsettings: {\n\t\t\t\t\t...gameState.settings,\n\t\t\t\t\tfogOpacity: newOpacity,\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<span>\n\t\t\t<ToolControlsView \n\t\t\t\tgameState={ gameState } \n\t\t\t\tonTextChangeGame={ onTextChangeGame } \n\t\t\t\tsetFogOpacity={ setFogOpacity } \n\t\t\t\tsetSubtool={ setSubtool } \n\t\t\t\tresetFog={ resetFog } \n\t\t\t\tresetDrawing={ resetDrawing } />\n\t\t</span>\n\t)\n}\n\nexport default ToolControls\n","import Button from './Button.js'\n\nconst MapConfigView = ({ isSelected, mapConfigState, mapId, load, onTextChange, onIntegerChange, deleteMap }) => {\n\treturn (\n\t\t<div className={ isSelected ? 'selected' : null }>\n\t\t\t{ mapId } - { mapConfigState.name }\n\t\t\t<input value={ mapConfigState.imageUrl || '' } placeholder='Map url' size='8' onChange={ (e) => onTextChange('imageUrl', e) } />\n\t\t\tw:\n\t\t\t<input value={ mapConfigState.width || 0 } placeholder='width' className='text3' onChange={ (e) => onIntegerChange('width', e) } type='number' min='0' step='10' title='width' />\n\t\t\th:\n\t\t\t<input value={ mapConfigState.height || 0 } placeholder='height' className='text3' onChange={ (e) => onIntegerChange('height', e) } type='number' min='0' step='10' title='height' />\n\t\t\t<Button title='Save & load map' value='&#x1f4c0;' onClick={ load } />\n\t\t\t<Button title='Delete map' value='&#x1f5d1;' onClick={ deleteMap } />\n\t\t</div>\n\t)\n}\n\nexport default MapConfigView\n","import React, { useState } from 'react'\nimport MapConfigView from '../views/MapConfigView.js'\n\nconst initialMapConfigState = (gameState, map) => {\n\tconst maps = gameState.game.maps\n\tconst existingMap = maps.filter((mapElement) => mapElement.$id === map.$id)\n\tconst currentMap = existingMap ? existingMap : { name: undefined, url: undefined, w: undefined, h: undefined, }\n\n\treturn {\n\t\t$id: map.$id,\n\t\tname: currentMap.name ? currentMap.name : map.name,\n\t\timageUrl: currentMap.imageUrl ? currentMap.imageUrl : '',\n\t\twidth: currentMap.width ? currentMap.width : window.innerWidth,\n\t\theight: currentMap.height ? currentMap.height : window.innerHeight,\n\t\tx: 0,\n\t\ty: 0,\t\n\t}\n}\n\nconst MapConfig = ({ gameState, setGameState, map, mapId, websocket }) => {\n\tconst [mapConfigState, setMapConfigState] = useState(initialMapConfigState(gameState, map))\n\tconst isSelected = gameState.game.mapId === mapId\n\n\tconst onTextChange = (key, evt) => {\n\t\tsetMapConfigState({\n\t\t\t...mapConfigState,\n\t\t\t[key]: evt.target.value,\n\t\t})\n\t}\n\n\tconst onIntegerChange = (key, evt) => {\n\t\tconst value = parseInt(evt.target.value) || undefined\n\t\tsetMapConfigState({\n\t\t\t...mapConfigState,\n\t\t\t[key]: value,\n\t\t})\n\t}\n\n\tconst load = () => {\n\t\tconst updatedMaps = gameState.game.maps.map((map) => {\n\t\t\treturn parseInt(mapId) === map.$id ? { ...map, imageUrl: mapConfigState.imageUrl, width: mapConfigState.width, height: mapConfigState.height, } : map\n\t\t})\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tgame: {\n\t\t\t\t...gameState.game,\n\t\t\t\tmaps: updatedMaps,\n\t\t\t\tmapId: parseInt(mapId),\n\t\t\t\tisFirstLoadDone: true,\n\t\t\t\tisFogLoaded: true,\n\t\t\t}\n\t\t})\n\t}\n\n\tconst deleteMap = () => {\n\t\tif (window.confirm('Delete map?')) {\n\t\t\tconst maps = gameState.game.maps\n\t\t\tconst newMaps = maps.filter((map) => parseInt(map.$id) !== parseInt(mapId))\n\t\t\tsetGameState({\n\t\t\t\t...gameState,\n\t\t\t\tgame: {\n\t\t\t\t\t...gameState.game,\n\t\t\t\t\tmaps: newMaps,\n\t\t\t\t\tmapId: parseInt(mapId) === gameState.game.mapId ? undefined : gameState.game.mapId,\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\tmap ?\n\t\t\t<MapConfigView \n\t\t\t\tisSelected={ isSelected } \n\t\t\t\tmapConfigState={ mapConfigState } \n\t\t\t\tmapId={ mapId } \n\t\t\t\tload={ load } \n\t\t\t\tonTextChange={ onTextChange } \n\t\t\t\tonIntegerChange={ onIntegerChange } \n\t\t\t\tdeleteMap={ deleteMap }\n\t\t\t/>\n\t\t: null\n\t)\n}\n\nexport default MapConfig\n","import MapConfig from '../components/MapConfig.js'\nimport Button from './Button.js'\n\nconst MapToolView = ({ gameState, setGameState, controlPanelState, onTextChange, createMap, websocket }) => {\n\tif (!controlPanelState.toggleOnMaps)\n\t\treturn null\n\tconst maps = gameState.game.maps\n\tconst keys = maps && Object.keys(maps)\n\n\treturn (\n\t\t<div>\n\t\t\t<hr />\n\t\t\t<div>\n\t\t\t<input placeholder='New map name' onChange={ (e) => onTextChange('newMapName', e) } value={ controlPanelState.newMapName } />\n\t\t\t<Button title='Create new map' value='&#x2795;' onClick={ createMap } disabled={ !controlPanelState.newMapName || (controlPanelState.newMapName === '') } />\n\t\t\t{ keys && keys.map((mapId, $i) => (\n\t\t\t\t<MapConfig key={ `map${$i}` } gameState={ gameState } setGameState={ setGameState } map={ maps[mapId] } mapId={ mapId } websocket={ websocket } />\n\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default MapToolView\n","import Button from './Button.js'\n\nconst HostTokenConfigView = ({ maps, token, copy, onToggle, selectToken, onTextChange, onIntegerChange, onMapSelect, deleteToken }) => {\n\treturn (\n\t\t<div className='tokenConfig'>\n\t\t\t<Button title='Duplicate token' value='&#x1f46f;' onClick={ copy } />\n\t\t\t<Button value={ token.pc ? '\\u{1f5a5}' : '\\u{1f464}' } onClick={ (e) => onToggle('pc', e) } title='pc/npc' />\n\t\t\t<Button value={ token.$selected ? '\\u{2705}' : '\\u{274C}' } onClick={ (e) => selectToken(token, e) } title='(un)select' />\n\t\t\t<Button value={ token.ko ? '\\u{1f940}' : '\\u{1f339}' } onClick={ (e) => onToggle('ko', e) } title='alive/dead' />\n\t\t\t<input value={ token.name || '' } placeholder='Name' size='8' onChange={ (e) => onTextChange('name', e) } />\n\t\t\t<input value={ token.url || '' } placeholder='Url' size='8' onChange={ (e) => onTextChange('url', e) } />\n\t\t\twh:\n\t\t\t<input value={ token.width || '' } placeholder='w' className='text2' onChange={ (e) => onIntegerChange('width', e) } type='number' step='5' min='0' title='width' />\n\t\t\t<input value={ token.height || '' } placeholder='h' className='text2' onChange={ (e) => onIntegerChange('height', e) } type='number' step='5' min='0' title='height' />\n\t\t\txy:\n\t\t\t<input value={ token.x || '' } placeholder='x' className='text3' onChange={ (e) => onIntegerChange('x', e) } type='number' step='5' title='x coord' />\n\t\t\t<input value={ token.y || '' } placeholder='y' className='text3' onChange={ (e) => onIntegerChange('y', e) } type='number' step='5' title='y coord' />\n\t\t\t<select defaultValue={ token.mapId } onChange={ (e) => onMapSelect(e) } title='which map(s)'>\n\t\t\t\t<option>(all)</option>\n\t\t\t\t{ Object.keys(maps).map((key, $i) => (\n\t\t\t\t\t<option key={ $i } value={ key }>\n\t\t\t\t\t\t{ maps[key].name || maps[key].imageUrl || '(unnamed)' }\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t\t<Button title='Delete token' value='&#x1f5d1;' onClick={ deleteToken } />\n\t\t</div>\n\t)\n}\n\nexport default HostTokenConfigView\n","const GuestTokenConfigView = ({ token, onTextChange, onIntegerChange }) => {\n\treturn (\n\t\t<div className='tokenConfig'>\n\t\t\t<input value={ token.name || '' } placeholder='Name' size='8' onChange={ (e) => onTextChange('name', e) } />\n\t\t\t<input value={ token.url || '' } placeholder='Url' size='8' onChange={ (e) => onTextChange('url', e) } />\n\t\t\twh:\n\t\t\t<input value={ token.width || '' } placeholder='w' className='text2' onChange={ (e) => onIntegerChange('width', e) } type='number' step='5' min='0' title='width' />\n\t\t\t<input value={ token.height || '' } placeholder='h' className='text2' onChange={ (e) => onIntegerChange('height', e) } type='number' step='5' min='0' title='height' />\n\t\t\txy:\n\t\t\t<input value={ token.x || '' } placeholder='x' className='text3' onChange={ (e) => onIntegerChange('x', e) } type='number' step='5' title='x coord' />\n\t\t\t<input value={ token.y || '' } placeholder='y' className='text3' onChange={ (e) => onIntegerChange('y', e) } type='number' step='5' title='y coord' />\n\t\t</div>\n\t)\n}\n\nexport default GuestTokenConfigView\n","import React from 'react'\nimport HostTokenConfig from '../views/HostTokenConfigView.js'\nimport GuestTokenConfigView from '../views/GuestTokenConfigView.js'\n\nconst TokenConfig = ({ gameState, setGameState, token, updateGameToken, selectGameToken }) => {\n\tconst update = (callback) => {\n\t\tupdateGameToken(token, callback)\n\t}\n\n\tconst deleteToken = () => {\n\t\tconst tokens = gameState.game.tokens.map(t => t)\n\t\tconst index = tokens.indexOf(token)\n\t\ttokens.splice(index, 1)\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tgame: {\n\t\t\t\t...gameState.game,\n\t\t\t\ttokens: tokens,\n\t\t\t}\n\t\t})\n\t}\n\t\n\tconst copy = () => {\n\t\tconst tokens = gameState.game.tokens.map(t => t)\n\t\tconst index = tokens.indexOf(token)\n\t\ttokens.splice(index + 1, 0, copy)\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tgame: {\n\t\t\t\t...gameState.game,\n\t\t\t\ttokens: tokens,\n\t\t\t}\n\t\t})\n\t}\n\n\tconst onMapSelect = (e) => {\n\t\tlet value = e.target.value\n\t\tif (Object.keys(gameState.game.maps).indexOf(value) < 0)\n\t\t\tvalue = undefined\n\t\tupdate(token => token.mapId = value)\n\t}\n\n\tconst onToggle = (key) => {\n\t\tupdate(token => token[key] = !token[key])\n\t}\n\n\tconst onIntegerChange = (key, e) => {\n\t\tupdate(token => token[key] = parseInt(e.target.value) || undefined)\n\t}\n\n\tconst onTextChange = (key, e) => {\n\t\tupdate(token => token[key] = e.target.value)\n\t}\n\n\tconst selectToken = (token, e) => {\n\t\tselectGameToken(token, undefined, true)\n\t}\n\n\tconst maps = gameState.game.maps\n\n\treturn (\n\t\t<div>\n\t\t\t{ token ?\n\t\t\t\tgameState.metadata.isHost ?\n\t\t\t\t<HostTokenConfig \n\t\t\t\t\tmaps={ maps } \n\t\t\t\t\ttoken={ token } \n\t\t\t\t\tcopy={ copy } \n\t\t\t\t\tonToggle={ onToggle } \n\t\t\t\t\tselectToken={ selectToken } \n\t\t\t\t\tonTextChange={ onTextChange } \n\t\t\t\t\tonIntegerChange={ onIntegerChange } \n\t\t\t\t\tonMapSelect={ onMapSelect } \n\t\t\t\t\tdeleteToken={ deleteToken }\n\t\t\t\t/>\n\t\t\t\t:\n\t\t\t\t<GuestTokenConfigView \n\t\t\t\t\ttoken={ token } \n\t\t\t\t\tonTextChange={ onTextChange } \n\t\t\t\t\tonIntegerChange={ onIntegerChange }\n\t\t\t\t/>\n\t\t\t: null\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default TokenConfig\n","import TokenConfig from '../components/TokenConfig.js'\n\nconst SelectedTokensControlsView = ({ gameState, setGameState, updateGameToken, selectGameToken }) => {\n\tconst tokens = gameState.game.tokens.filter(t => t.$selected)\n\treturn (\n\t\t<div>\n\t\t\t{ tokens.map((token, $i) => (\n\t\t\t<TokenConfig key={ `token${$i}` } token={ token } gameState={ gameState } setGameState={ setGameState } updateGameToken={ updateGameToken } selectGameToken={ selectGameToken } />\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default SelectedTokensControlsView\n","import TokenConfig from '../components/TokenConfig.js'\nimport Button from './Button.js'\nimport SelectedTokensControls from './SelectedTokensControlsView.js'\n\nconst TokenToolView = ({ gameState, setGameState, toggleOnTokens, onTextChange, newTokenUrl, createToken, updateGameToken, selectGameToken }) => {\n\tif (!gameState.metadata.isHost)\n\t\treturn null\n\tif (toggleOnTokens)\n\t\treturn (\n\t\t\t<div>\n\t\t\t<hr />\n\t\t\t<input placeholder='New token url' onChange={ (e) => onTextChange('newTokenUrl', e) } value={ newTokenUrl || '' } />\n\t\t\t<Button title='Create new token' value='&#x2795;' onClick={ createToken } />\n\t\t\t{ gameState.game.tokens.length }\n\t\t\t{ gameState.game.tokens.map((token, $i) => (\n\t\t\t\t<TokenConfig key={ `token${$i}` } token={ token } gameState={ gameState } setGameState={ setGameState } updateGameToken={ updateGameToken } selectGameToken={ selectGameToken } />\n\t\t\t))}\n\t\t\t</div>\n\t\t)\n\telse\n\t\treturn <SelectedTokensControls gameState={ gameState } setGameState={ setGameState } updateGameToken={ updateGameToken } selectGameToken={ selectGameToken } />\n}\n\nexport default TokenToolView\n","import Button from './Button.js'\nimport ToggleButton from '../components/ToggleButton.js'\n\nconst UserToolView = ({ gameState, controlPanelState, setControlPanelState, initAsDev, toggleOnUser, copyJson, pasteJson, setGameSettingsInt, setGameSettingsText }) => {\n\tif (!toggleOnUser)\n\t\treturn null\n\treturn (\n\t\t<div>\n\t\t\t<hr />\n\t\t\t<input title='User name' placeholder='User name' value={ gameState.settings.username || ''} onChange={ (e) => setGameSettingsText('username', e) } />\n\t\t\t<ToggleButton title='Share mouse (cursor)' value='&#x1f401;' controlPanelState={ controlPanelState } setControlPanelState={ setControlPanelState } />\n\t\t\t<input title='Cursor size' value={ gameState.metadata.cursorsize || '' } onChange={ (e) => setGameSettingsInt('cursorSize', e) } type='number' min='0' />\n\t\t\t<hr />\n\t\t\t<Button title='Redo as dev' value='&#x1f530;' onClick={ initAsDev } />\n\t\t\t<Button title='Copy JSON to clipboard' value='&#x1f46f;' onClick={ copyJson } />\n\t\t\t<Button title='Paste JSON from clipboard' value='&#x1f4cb;' onClick={ pasteJson } />\n\t\t</div>\n\t)\n}\n\nexport default UserToolView\n","import Button from './Button.js'\nimport ToggleButton from '../components/ToggleButton.js'\nimport ToolSelectView from './ToolSelectView.js'\nimport ToolControls from '../components/ToolControls.js'\nimport MapToolView from './MapToolView.js'\nimport TokenToolView from './TokenToolView.js'\nimport UserToolView from './UserToolView.js'\nimport SelectedTokensControlsView from './SelectedTokensControlsView.js'\n\nconst ControlPanelView = ({ gameState, setGameState, controlPanelState, setControlPanelState, websocket, hidden, toggleHidden, setGameSettingsInt, setGameSettingsText, socketRequestRefresh, initAsDev, toggleOnUser, toggleOnTokens, copyJson, pasteJson, onTextChange, createMap, updateGameToken, selectGameToken, newTokenUrl, createToken, resetFog, resetDrawing }) => {\n\tif (hidden)\n\t\treturn (\n\t\t\t<div id='control-panel'>\n\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t<Button value='&#x1f441;' onClick={ toggleHidden } title='show/hide control panel' />\n\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t</div>\n\t\t)\n\t\n\tif (gameState.metadata.isHost)\n\t\treturn (\n\t\t\t<div id='control-panel'>\n\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t<Button value='&#x1f441;' onClick={ toggleHidden } title='show/hide control panel' />\n\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t<ToggleButton title='User' value='&#x1f9d9;&#x200d;&#x2642;&#xfe0f;' controlPanelState={ controlPanelState } setControlPanelState={ setControlPanelState } />\n\t\t\t\t<ToggleButton title='Maps' value='&#x1f5fa;' controlPanelState={ controlPanelState } setControlPanelState={ setControlPanelState } />\n\t\t\t\t<ToggleButton title='Tokens' value='&#x265f;' controlPanelState={ controlPanelState } setControlPanelState={ setControlPanelState } />\n\t\t\t\t<Button title='Push refresh to players' value='&#x1f4ab;' onClick={ () => websocket.pushRefresh(gameState) } />\n\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t<ToolSelectView \n\t\t\t\t\tgameState={ gameState } \n\t\t\t\t\tsetGameState={ setGameState } />\n\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t<ToolControls \n\t\t\t\t\tgameState={ gameState } \n\t\t\t\t\tsetGameState={ setGameState } \n\t\t\t\t\tresetFog={ resetFog } \n\t\t\t\t\tresetDrawing={ resetDrawing } />\n\t\t\t\t<MapToolView \n\t\t\t\t\tgameState={ gameState } \n\t\t\t\t\tsetGameState={ setGameState } \n\t\t\t\t\tcontrolPanelState={ controlPanelState } \n\t\t\t\t\tonTextChange={ onTextChange } \n\t\t\t\t\tcreateMap={ createMap } \n\t\t\t\t\twebsocket={ websocket } />\n\t\t\t\t<TokenToolView \n\t\t\t\t\tgameState={ gameState } \n\t\t\t\t\tsetGameState={ setGameState } \n\t\t\t\t\ttoggleOnTokens={ toggleOnTokens } \n\t\t\t\t\tonTextChange={ onTextChange } \n\t\t\t\t\tnewTokenUrl={ newTokenUrl } \n\t\t\t\t\tcreateToken={ createToken } \n\t\t\t\t\tupdateGameToken={ updateGameToken } \n\t\t\t\t\tselectGameToken={ selectGameToken } />\n\t\t\t\t<UserToolView \n\t\t\t\t\tgameState={ gameState } \n\t\t\t\t\tsetGameState={ setGameState } \n\t\t\t\t\tcontrolPanelState={ controlPanelState } \n\t\t\t\t\tsetControlPanelState={ setControlPanelState } \n\t\t\t\t\tinitAsDev={ initAsDev } \n\t\t\t\t\ttoggleOnUser={ toggleOnUser } \n\t\t\t\t\tcopyJson={ copyJson } \n\t\t\t\t\tpasteJson={ pasteJson } \n\t\t\t\t\tsetGameSettingsInt={ setGameSettingsInt } \n\t\t\t\t\tsetGameSettingsText={ setGameSettingsText } />\n\t\t\t</div>\n\t\t)\n\telse\n\t\treturn (\n\t\t\t<div id='control-panel'>\n\t\t\t\t<Button value='&#x1f441;' onClick={ toggleHidden } title='show/hide control panel' />\n\t\t\t\t<input title='User name' placeholder='User name' value={ gameState.settings.username || '' } onChange={ (e) => setGameSettingsText('username', e) } />\n\t\t\t\t<ToggleButton title='Share mouse (cursor)' value='&#x1f401;' controlPanelState={ controlPanelState } setControlPanelState={ setControlPanelState } />\n\t\t\t\t<input title='Cursor size' value={ gameState.metadata.cursorsize || '' } onChange={ (e) => setGameSettingsInt('cursorSize', e) } type='number' min='0' />\n\t\t\t\t<Button title='Request gameboard refresh from host' onClick={ socketRequestRefresh } value='&#x1f4ab;' />\n\t\t\t\t<SelectedTokensControlsView \n\t\t\t\t\tgameState={ gameState }\n\t\t\t\t\tsetGameState={ setGameState } \n\t\t\t\t\tupdateGameToken={ updateGameToken } \n\t\t\t\t\tselectGameToken={ selectGameToken } />\n\t\t\t</div>\n\t\t)\n}\n\nexport default ControlPanelView\n","import React from 'react'\nimport guid from '../controllers/guid.js'\nimport ControlPanelView from '../views/ControlPanelView.js'\n\nconst ControlPanel = ({ gameState, setGameState, controlPanelState, setControlPanelState, websocket, notify, fromJson, initAsDev, updateGameToken, selectGameToken, resetFog, resetDrawing }) => {\n\tconst toggleHidden = () => {\n\t\tsetControlPanelState({\n\t\t\t...controlPanelState,\n\t\t\thidden: !controlPanelState.hidden,\n\t\t})\n\t}\n\n\tconst setGameSettingsInt = (key, e) => {\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tsettings: {\n\t\t\t\t...gameState.settings,\n\t\t\t\t[key]: parseInt(e.target.value) || undefined,\t\n\t\t\t}\n\t\t})\n\t}\n\n\tconst setGameSettingsText = (key, e) => {\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tsettings: {\n\t\t\t\t...gameState.settings,\n\t\t\t\t[key]: e.target.value,\n\t\t\t}\n\t\t})\n\t}\n\n\tconst onTextChange = (key, e) => {\n\t\tsetControlPanelState({\n\t\t\t...controlPanelState,\n\t\t\t[key]: e.target.value,\n\t\t})\n\t}\n\n\tconst createMap = () => {\n\t\tconst maps = gameState.game.maps\n\t\tconst mapId = maps.length\n\t\tconst newMap = {\n\t\t\tname: controlPanelState.newMapName,\n\t\t\t$id: mapId,\n\t\t\timageUrl: '',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: window.innerWidth,\n\t\t\theight: window.innerHeight,\n\t\t\tdrawPaths: [],\n\t\t\tfogPaths: [],\n\t\t}\n\t\tmaps[mapId] = newMap\n\t\tconst newMaps = maps.filter(map => map)\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tgame: {\n\t\t\t\t...gameState.game,\n\t\t\t\tmaps: newMaps,\n\t\t\t\tmapId: gameState.game.mapId ? gameState.game.mapId : parseInt(mapId)\n\t\t\t}\n\t\t})\n\t\tsetControlPanelState({\n\t\t\t...controlPanelState,\n\t\t\tnewMapName: '',\n\t\t})\n\t}\n\n\tconst createToken = () => {\n\t\tconst tokensCopy = JSON.parse(JSON.stringify(gameState.game.tokens || []))\n\t\tif (!controlPanelState.newTokenUrl)\n\t\t\treturn\n\t\ttokensCopy.push({\n\t\t\turl: controlPanelState.newTokenUrl,\n\t\t\tguid: guid(),\n\t\t\tmapId: gameState.game.mapId,\n\t\t\t$selected: undefined,\n\t\t\tname: undefined,\n\t\t\t$x0: 0,\n\t\t\t$y0: 0,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tko: undefined,\n\t\t\tpc: undefined,\n\t\t\tw: 0,\n\t\t\th: 0,\n\t\t})\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tgame: {\n\t\t\t\t...gameState.game,\n\t\t\t\ttokens: tokensCopy,\n\t\t\t}\n\t\t})\n\t\tsetControlPanelState({\n\t\t\t...controlPanelState,\n\t\t\tnewTokenUrl: undefined,\n\t\t})\n\t}\n\n\tconst copyJson = () => {\n\t\tconst json = gameState.toJson()\n\t\twindow.navigator.clipboard.writeText(json).then(() => {\n\t\t\tnotify('copied to clipboard')\n\t\t}).catch(err => {\n\t\t\tconsole.error('failed to write to clipboard: ', err)\n\t\t\tnotify(`failed to write to clipboard: ${err}`, 2000)\n\t\t})\n\t}\n\n\tconst pasteJson = () => {\n\t\tconst note1 = notify('reading clipboard...')\n\t\twindow.navigator.clipboard.readText().then(json => {\n\t\t\tif (window.confirm(`Do you really want to overwrite this game with what's in your clipboard? ${json.slice(0,99)}...`)) {\n\t\t\t\tfromJson(json)\n\t\t\t\tnotify('pasted from clipboard')\n\t\t\t}\n\t\t\tnote1 && note1.close()\n\t\t}).catch(err => {\n\t\t\tconsole.error('failed to read clipboard: ', err)\n\t\t\tnotify(`failed to read clipboard: ${err}`, 2000)\n\t\t})\n\t}\n\n\tconst socketRequestRefresh = () => {\n\t\twebsocket.requestRefresh()\n\t}\n\n\treturn (\n\t\t<ControlPanelView \n\t\t\tgameState={ gameState } \n\t\t\tsetGameState={ setGameState } \n\t\t\tcontrolPanelState={ controlPanelState } \n\t\t\tsetControlPanelState={ setControlPanelState } \n\t\t\twebsocket={ websocket } \n\t\t\thidden={ controlPanelState.hidden } \n\t\t\ttoggleHidden={ toggleHidden } \n\t\t\tsetGameSettingsInt={ setGameSettingsInt } \n\t\t\tsetGameSettingsText={ setGameSettingsText } \n\t\t\tsocketRequestRefresh={ socketRequestRefresh } \n\t\t\tinitAsDev={ initAsDev } \n\t\t\ttoggleOnUser={ controlPanelState.toggleOnUser } \n\t\t\ttoggleOnTokens={ controlPanelState.toggleOnTokens }\n\t\t\tcopyJson={ copyJson } \n\t\t\tpasteJson={ pasteJson } \n\t\t\tonTextChange={ onTextChange } \n\t\t\tcreateMap={ createMap } \n\t\t\tupdateGameToken={ updateGameToken } \n\t\t\tselectGameToken={ selectGameToken } \n\t\t\tnewTokenUrl={ controlPanelState.newTokenUrl } \n\t\t\tcreateToken={ createToken } \n\t\t\tresetFog={ resetFog } \n\t\t\tresetDrawing={ resetDrawing } />\n\t)\n}\n\nexport default ControlPanel\n","import Background from '../components/Background.js'\nimport Drawing from '../components/Drawing.js'\nimport Fog from '../components/Fog.js'\nimport Overlay from '../components/Overlay.js'\nimport Token from '../components/Token.js'\nimport Cursor from './Cursor.js'\nimport ControlPanel from '../components/ControlPanel.js'\n\nconst GameView = ({ gameState, setGameState, controlPanelState, setControlPanelState, websocket, onMouseMove, onMouseUp, onMouseDown, fromJson, notify, initAsDev, updateTokens, updateGameToken, selectGameToken, resetFog, resetDrawing }) => {\n\tconst goneClass = gameState.game.isFogLoaded ? null : 'gone'\n\tconst deadline = new Date() - 30000\n\tconst cursors = Object.assign({}, gameState.metadata.cursors)\n\tconst tokens = gameState.game.tokens.map(t => t)\n\n\tfor (let name in cursors) {\n\t\tlet time = cursors[name].time\n\t\tif (!time || time < deadline)\n\t\t\tdelete cursors[name]\n\t}\n\n\treturn (\n\t\t<div id='game' onMouseMove={ (e) => onMouseMove(e) } onMouseDown={ (e) => onMouseDown(e) } onMouseUp={ (e) => onMouseUp(e) }>\n\t\t\t<div className={ goneClass }>\n\t\t\t\t<Background\n\t\t\t\t\tgameState={ gameState } \n\t\t\t\t\tsetGameState={ setGameState } \n\t\t\t\t\tcontrolPanelState={ controlPanelState } \n\t\t\t\t\tsetControlPanelState={ setControlPanelState } \n\t\t\t\t\tupdateTokens={ updateTokens } \n\t\t\t\t\tclassName={ goneClass } />\n\t\t\t\t<Drawing gameState={ gameState } />\n\t\t\t\t{ tokens ? \n\t\t\t\t\t<div id='tokens'>\n\t\t\t\t\t\t{ tokens.map((token, $i) => (\n\t\t\t\t\t\t\t<Token key={ `Token${$i}` } token={ token } gameState={ gameState } selectGameToken={ selectGameToken } />\n\t\t\t\t\t\t)) }\n\t\t\t\t\t</div>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t<Fog gameState={ gameState } />\n\t\t\t\t{ cursors ?\n\t\t\t\t\t<div id='cursors'>\n\t\t\t\t\t\t{ Object.keys(cursors).map((key, $i) => (\n\t\t\t\t\t\t\t<Cursor key={ `cursor${$i}` } name={ key } cursor={ gameState.metadata.cursors[key] } size={ gameState.metadata.cursorsize } />\n\t\t\t\t\t\t)) }\n\t\t\t\t\t</div>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t{/* Overlay: Holds outline for fog & draw tools */ }\n\t\t\t\t<Overlay gameState={ gameState } /> \n\t\t\t</div>\n\t\t\t<ControlPanel \n\t\t\t\tgameState={ gameState } \n\t\t\t\tsetGameState={ setGameState } \n\t\t\t\tcontrolPanelState={ controlPanelState } \n\t\t\t\tsetControlPanelState={ setControlPanelState }\n\t\t\t\twebsocket={ websocket } \n\t\t\t\tnotify={ notify } \n\t\t\t\tfromJson={ fromJson } \n\t\t\t\tinitAsDev={ initAsDev } \n\t\t\t\tupdateGameToken={ updateGameToken } \n\t\t\t\tselectGameToken={ selectGameToken } \n\t\t\t\tresetFog={ resetFog } \n\t\t\t\tresetDrawing={ resetDrawing } />\n\t\t</div>\n\t)\n}\n\nexport default GameView\n","import React, { useEffect, useState } from 'react'\nimport GameView from '../views/GameView.js'\nimport guid from '../controllers/guid.js'\n\nconst initialGameState = (overlayRef) => {\n\tconst params = new URLSearchParams(window.location.href.replace(/.*\\?/, ''))\n\n\treturn {\n\t\twebsocket: null,\n\t\toverlayRef: overlayRef,\n\t\tsettings: {\n\t\t\tcursorSize: 50,\n\t\t\tfogOpacity: 0.5,\n\t\t\tfogRadius: 33,\n\t\t\tdrawColor: 'purple',\n\t\t\tdrawSize: 8,\n\t\t\ttool: 'move',\n\t\t\tsubtool: undefined,\n\t\t\tusername: params.get('host') ? 'DM' : 'PC',\n\t\t\tshareMouse: true,\n\t\t},\n\t\tmetadata: {\n\t\t\tisHost: params.get('host'),\n\t\t\troom: params.get('room'),\n\t\t\tcursors: [],\n\t\t\tlastX: undefined,\n\t\t\tlastY: undefined,\n\t\t\tdownX: undefined,\n\t\t\tdownY: undefined,\n\t\t},\n\t\tgame: {\n\t\t\tmapId: undefined,\n\t\t\tgen: 0,\n\t\t\twidth: window.innerWidth,\n\t\t\theight: window.innerHeight,\n\t\t\tisFogLoaded: false,\n\t\t\tisFirstLoadDone: false, /* Ensure we don't overwrite localStorage before load is done */\n\t\t\tmaps: [],\n\t\t\ttokens: [],\n\t\t}\n\t}\n}\n\nconst initialControlPanelState = () => {\n\treturn {\n\t\tname: undefined,\n\t\turl: undefined,\n\t\tnewTokenUrl: undefined,\n\t\tnewMapName: undefined,\n\t\thidden: false,\n\t\ttoggleOnMaps: false,\n\t\ttoggleOnUser: false,\n\t\ttoggleOnTokens: false,\n\t\tfogDiameter: 33,\n\t}\n}\n\nconst Game = ({ websocket }) => {\n\tconst overlayRef = React.useRef()\n\tconst [gameState, setGameState] = useState(initialGameState(overlayRef))\n\tconst [controlPanelState, setControlPanelState] = useState(initialControlPanelState)\n\tlet currentPath = []\n\n\t// On Mount\n\tuseEffect(() => {\n\t\twindow.addEventListener('beforeunload', saveToLocalStorage)\n\t\twindow.addEventListener('resize', onResize)\n\t\twindow.addEventListener('keypress', onKeyPress)\n\t\twindow.addEventListener('keydown', onKeyDown)\n\t\twebsocket.addCallbacks( gameState.metadata.isHost, receiveData )\n\t\tloadFromLocalStorage()\n\n\t\t// On Unmount\n\t\treturn () => {\n\t\t\tsaveToLocalStorage()\n\t\t\twindow.removeEventListener('beforeunload', saveToLocalStorage)\n\t\t\twindow.removeEventListener('resize', onResize)\n\t\t\twindow.removeEventListener('keypress', onKeyPress)\n\t\t\twindow.removeEventListener('keydown', onKeyDown)\n\t\t}\n\t},[])\n\n\t/*\n\tuseEffect(() => {\n\t\tif (websocket && gameState.settings.shareMouse)\n\t\t\twebsocket.pushCursor(gameState.metadata.lastX, gameState.metadata.lastY)\n\t}, [gameState.metadata.lastX, gameState.metadata.lastY, gameState.settings.shareMouse])\n\t*/\n\n\tuseEffect(() => {\n\t\t//TODO: reenable websocket push\n\t\t//if (websocket)\n\t\t//\twebsocket.pushTokens(gameState.game.tokens)\n\t}, [gameState.game.tokens])\n\n\tuseEffect(() => {\n\t\tif (websocket && gameState.metadata.isHost)\n\t\t\twebsocket.pushMaps(gameState.game.maps, gameState.game.mapId)\n\t}, [gameState.game.mapId])\n\n\t/****************************************************\n\t * Map Functions                                    *\n\t ****************************************************/\n\tconst getMap = () => {\n\t\tif (gameState.game.maps.length === 0)\n\t\t\treturn undefined\n\t\tconst currMap = gameState.game.maps.filter((map) => parseInt(map.$id) === parseInt(gameState.game.mapId))\n\t\treturn currMap.length > 0 ? currMap[0] : gameState.game.maps[0]\n\t}\n\n\t/* Copy maps and dump current data urls, suitable for save to state or localStorage */\n\tconst dumpMaps = () => {\n\t\tlet newMap = getMap()\n\t\tconst mapsCopy = gameState.game.maps.map(map => {\n\t\t\treturn map.$id === newMap.$id ? newMap : map\n\t\t})\n\t\treturn mapsCopy\n\t}\n\n\tconst initAsDev = () => {\n\t\tif (!window.confirm('Reset?'))\n\t\t\treturn null\n\t\tlet tokens = [\n\t\t\t{ name: 'bar', pc: 0 },\n\t\t\t{ name: 'foo', url: '/dev/belmont.jpg' },\n\t\t\t{ name: 'arr', pc: 1 },\n\t\t\t{ name: 'win', pc: 1, url: '/dev/redhead.jpg', y: 50, x: 90, w: 64, h:64 },\n\t\t]\n\t\tlet maps = [\n\t\t\t{\n\t\t\t\tname: 'kiwi',\n\t\t\t\timageUrl: '/dev/kiwi.jpeg',\n\t\t\t\t$id: 0,\n\t\t\t\twidth: 500,\n\t\t\t\theight: 500,\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tdrawPaths: [],\n\t\t\t\tfogPaths: [],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\timageUrl: '/dev/FFtri9T.png',\n\t\t\t\tspawnX: 40,\n\t\t\t\tspawnY: 80,\n\t\t\t\t$id: 1,\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tdrawPaths: [],\n\t\t\t\tfogPaths: [],\n\t\t\t}\n\t\t]\n\t\treturn new Promise(resolve => {\n\t\t\tsetGameState({\n\t\t\t\t...gameState,\n\t\t\t\tgame: {\n\t\t\t\t\t...gameState.game,\n\t\t\t\t\tmaps: maps,\n\t\t\t\t\ttokens: tokens,\n\t\t\t\t\tmapId: 0,\n\t\t\t\t},\n\t\t\t})\n\t\t\tresolve()\n\t\t})\n\t}\n\n\t/****************************************************\n\t * Update Functions                                 *\n\t ****************************************************/\n\tconst updateTokens = (callback, noEmit, additionalStateProperties) => {\n\t\tconst tokens = JSON.parse(JSON.stringify(gameState.game.tokens || []))\n\t\tif (!tokens || !Array.isArray(tokens))\n\t\t\treturn\n\t\tconst tokensCopy = tokens.map(callback)\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tgame: {\n\t\t\t\t...gameState.game,\n\t\t\t\t...additionalStateProperties,\t//TODO: Verify these state properties are put in the correct place\n\t\t\t\ttokens: tokensCopy,\n\t\t\t},\n\t\t})\n\t}\n\n\tconst updateToken = (token, callback, noEmit) => {\n\t\tconst tokenIdx = gameState.game.tokens.indexOf(token)\n\t\tconst tokensCopy = JSON.parse(JSON.stringify(gameState.game.tokens || []))\n\t\tconst tokenCopy = tokensCopy[tokenIdx]\n\t\tcallback(tokenCopy, tokenIdx, tokensCopy)\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tgame: {\n\t\t\t\t...gameState.game,\n\t\t\t\ttokens: tokensCopy,\n\t\t\t},\n\t\t})\n\t}\n\n\tconst updateTokenByIndex = (index, attrs, noEmit) => {\n\t\tconst tokensCopy = JSON.parse(JSON.stringify(gameState.game.tokens || []))\n\t\tconst tokenCopy = Object.assign(tokensCopy[index], attrs)\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tgame: {\n\t\t\t\t...gameState.game,\n\t\t\t\ttokens: tokensCopy,\n\t\t\t},\n\t\t})\n\t}\n\n\t/*\n\tconst updateCursors = (x, y, name, guid) => {\n\t\tconst cursors = Object.assign({}, gameState.metadata.cursors)\n\t\tcursors[guid] = { x: x, y: y, time: new Date(), u: name }\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tmetadata: {\n\t\t\t\t...gameState.metadata,\n\t\t\t\tcursors: cursors,\n\t\t\t},\n\t\t})\n\t}\n\t*/\n\n\tconst updateMap = (callback) => {\n\t\treturn new Promise(resolve => {\n\t\t\tconst mapsCopy = gameState.game.maps\n\t\t\tcallback(mapsCopy[gameState.game.mapId])\n\t\t\t//TODO: Verify if ,resolve is really needed or working\n\t\t\tsetGameState({\n\t\t\t\t...gameState,\n\t\t\t\tgame: {\n\t\t\t\t\t...gameState.game,\n\t\t\t\t\tmaps: mapsCopy,\n\t\t\t\t},\n\t\t\t}, resolve)\n\t\t})\n\t}\n\n\tconst toggleControlPanelVisibility = (key) => {\n\t\tsetControlPanelState({\n\t\t\t...controlPanelState,\n\t\t\t[key]: !controlPanelState[key],\n\t\t})\n\t}\n\n\t/****************************************************\n\t * Control Functions                                *\n\t ****************************************************/\n\tconst selectToken = (token, tokenSelected, multiSelect) => {\n\t\tif (!token.pc && !gameState.metadata.isHost)\n\t\t\treturn\n\t\tconst tokenIdx = gameState.game.tokens.indexOf(token)\n\t\tupdateTokens((copy, $i) => {\n\t\t\tif (tokenIdx === $i) {\n\t\t\t\tif (tokenSelected === undefined || tokenSelected === null)\n\t\t\t\t\ttokenSelected = !copy.$selected\n\t\t\t\tcopy.$selected = tokenSelected\n\t\t\t} else if (!multiSelect)\n\t\t\t\tcopy.$selected = false\n\t\t\t\n\t\t\t// set initial coords (for drag)\n\t\t\t//TODO: fix initial records, tokens jump on selection through mousekey\n\t\t\tif (copy.$selected) {\n\t\t\t\tcopy.$x0 = copy.x\n\t\t\t\tcopy.$y0 = copy.y\n\t\t\t}\n\t\t\treturn copy\n\t\t}, true)\n\t}\n\n\tconst dragSelectedTokens = (e) => {\n\t\tif (gameState.settings.tool !== 'move')\n\t\t\treturn\n\t\tconst downX = gameState.metadata.downX, downY = gameState.metadata.downY\n\t\tupdateTokens((token) => {\n\t\t\tif (token.$selected) {\n\t\t\t\ttoken.x = token.$x0 + e.pageX - downX\n\t\t\t\ttoken.y = token.$y0 + e.pageY - downY\n\t\t\t}\n\t\t\treturn token\n\t\t}, false, undefined)\n\t}\n\n\t/****************************************************\n\t * Drawing Functions                                *\n\t ****************************************************/\n\tconst setPointerOutline = (x, y, color, radius) => {\n\t\tif (color == null)\n\t\t\treturn\n\t\tconst ctx = gameState.overlayRef.current.getContext('2d')\n\t\tctx.strokeStyle = color\n\t\tctx.lineWidth = '3'\n\t\tctx.beginPath()\n\t\tctx.arc(x, y, radius, 0, 2*Math.PI)\n\t\tctx.stroke()\n\t\tctx.closePath()\n\t}\n\n\tconst updateCurrentDrawPath = () => {\n\t\tconst ctx = gameState.overlayRef.current.getContext('2d')\n\t\tctx.beginPath()\n\t\tfor (let pointId = 0; pointId < currentPath.length; pointId++) {\n\t\t\tctx.lineCap = 'round'\n\t\t\tctx.fillStyle = currentPath[pointId].drawColor\n\t\t\tctx.lineWidth = currentPath[pointId].drawSize\n\t\t\tctx.strokeStyle = currentPath[pointId].drawColor\n\t\t\tif (pointId === 0) {\n\t\t\t\tctx.moveTo(currentPath[pointId].x, currentPath[pointId].y)\n\t\t\t} else {\n\t\t\t\tctx.lineTo(currentPath[pointId].x, currentPath[pointId].y)\n\t\t\t}\n\t\t}\n\t\tctx.stroke()\n\t}\n\n\tconst updateCurrentFogPath = () => {\n\t\tconst ctx = gameState.overlayRef.current.getContext('2d')\n\t\tctx.beginPath()\n\t\tlet gradient\n\t\tfor (let pointId = 0; pointId < currentPath.length; pointId++) {\n\t\t\tgradient = ctx.createRadialGradient(currentPath[pointId].x, currentPath[pointId].y, currentPath[pointId].r2 || 1, currentPath[pointId].x, currentPath[pointId].y, currentPath[pointId].r*0.75)\n\t\t\tctx.lineCap = 'round'\n\t\t\tgradient.addColorStop(0, 'rgba(255,255,255,255)')\n\t\t\tgradient.addColorStop(1, 'rgba(255,255,255,0)')\n\t\t\tctx.fillStyle = gradient\n\t\t\tctx.fillRect(currentPath[pointId].x-currentPath[pointId].r, currentPath[pointId].y-currentPath[pointId].r, currentPath[pointId].x+currentPath[pointId].r, currentPath[pointId].y+currentPath[pointId].r)\n\t\t}\n\t\tctx.stroke()\n\t}\n\n\tconst clearOverlay = () => {\n\t\tconst ctx = gameState.overlayRef.current.getContext('2d')\n\t\tif (!ctx)\n\t\t\treturn\n\t\tctx.clearRect(0, 0, gameState.game.width, gameState.game.height);\n\t}\n\n\tconst resetFog = () => {\n\t\tconst currMap = getMap()\n\t\tif (currMap && gameState.metadata.isHost) {\n\t\t\tcurrentPath = []\n\t\t\tconst updatedMaps = gameState.game.maps.map((map) => {\n\t\t\t\treturn map.$id === currMap.$id ? {...currMap, fogPaths: [], } : map\n\t\t\t})\n\t\t\t\n\t\t\tsetGameState({\n\t\t\t\t...gameState,\n\t\t\t\tgame: {\n\t\t\t\t\t...gameState.game,\n\t\t\t\t\tmaps: updatedMaps,\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tconst resetDrawing = () => {\n\t\tconst currMap = getMap()\n\t\tif (currMap && gameState.metadata.isHost) {\n\t\t\tcurrentPath = []\n\t\t\tconst updatedMaps = gameState.game.maps.map((map) => {\n\t\t\t\treturn map.$id === currMap.$id ? {...currMap, drawPaths: [], } : map\n\t\t\t})\n\t\t\t\n\t\t\tsetGameState({\n\t\t\t\t...gameState,\n\t\t\t\tgame: {\n\t\t\t\t\t...gameState.game,\n\t\t\t\t\tmaps: updatedMaps,\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\t/****************************************************\n\t * Event Handlers                                   *\n\t ****************************************************/\n\t/* Callback when the window resizes */\n\tconst onResize = () => {\n\t\t//loadMap(null, true, true)\n\t}\n\n\tconst onKeyDown = (e) => {\n\t\tfor (let x of [document.activeElement, e.target])\n\t\t\t//TODO: Check if we can use triple equal\n\t\t\tif (x.tagName == 'INPUT' && (x.type === 'text' || x.type === 'number')) /* eslint-disable-line eqeqeq */\n\t\t\t\treturn e\n\t\t\n\t\tconst moveFactor = e.shiftKey ? 100 : 10\n\t\tconst moveSelectedTokens = () => {\n\t\t\tupdateTokens(token => {\n\t\t\t\tif (token.$selected) {\n\t\t\t\t\tswitch (e.keyCode) {\n\t\t\t\t\t\tcase 27: /* escape */\n\t\t\t\t\t\t\ttoken.$selected = false\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 37: /* left */\n\t\t\t\t\t\t\ttoken.x -= moveFactor\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 38: /* up */\n\t\t\t\t\t\t\ttoken.y -= moveFactor\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 39: /* right */\n\t\t\t\t\t\t\ttoken.x += moveFactor\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase 40: /* down */\n\t\t\t\t\t\t\ttoken.y += moveFactor\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tdefault: return\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault()\n\t\t\t\t}\n\t\t\t\treturn token\n\t\t\t})\n\t\t}\n\t\tswitch (e.keyCode) {\n\t\t\tcase 27:\n\t\t\tcase 37:\n\t\t\tcase 38:\n\t\t\tcase 39:\n\t\t\tcase 40:\n\t\t\t\tmoveSelectedTokens(e)\n\t\t\t\tbreak\n\t\t\tdefault: return\n\t\t}\n\t}\n\n\tconst onKeyPress = (e) => {\n\t\tif (!gameState.metadata.isHost)\n\t\t\treturn e\n\t\tfor (let x of [document.activeElement, e.target])\n\t\t\t//TODO: Check if we can use triple equal\n\t\t\tif ((x.tagName == 'INPUT' && (x.type === 'text' || x.type === 'number')) || (x.tagName == 'BUTTON')) /* eslint-disable-line eqeqeq */\n\t\t\t\treturn e\n\n\t\tconst cp = gameState.cpRef.current\n\t\tswitch(e.code) {\n\t\t\tcase 'KeyC':\n\t\t\t\tif (e.shiftKey)\n\t\t\t\t\tcp.copyJson() // dump json to clipboard\n\t\t\t\tbreak\n\t\t\tcase 'KeyH':\n\t\t\t\ttoggleControlPanelVisibility('hidden')\n\t\t\t\tbreak\n\t\t\tcase 'KeyG':\n\t\t\t\tsetGameState({\n\t\t\t\t\t...gameState,\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\t...gameState.settings,\n\t\t\t\t\t\ttool: 'fog',\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase 'KeyL':\n\t\t\t\tif (e.shiftKey)\n\t\t\t\t\tloadFromLocalStorage()\n\t\t\t\telse\n\t\t\t\t\tsaveToLocalStorage()\n\t\t\t\tbreak\n\t\t\tcase 'KeyM':\n\t\t\t\ttoggleControlPanelVisibility('toggleOnMaps')\n\t\t\t\tbreak\n\t\t\tcase 'KeyP':\n\t\t\t\tsetGameState({\n\t\t\t\t\t...gameState,\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\t...gameState.settings,\n\t\t\t\t\t\ttool: 'draw',\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase 'KeyT':\n\t\t\t\ttoggleControlPanelVisibility('toggleOnTokens')\n\t\t\t\tbreak\n\t\t\tcase 'KeyV':\n\t\t\t\tif (e.shiftKey)\n\t\t\t\t\tcp.pasteJson() // load json from clipboard\n\t\t\t\telse\n\t\t\t\tsetGameState({\n\t\t\t\t\t...gameState,\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\t...gameState.settings,\n\t\t\t\t\t\ttool: 'move',\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tdefault: return\n\t\t}\n\t}\n\n\tconst onMouseUp = (e) => {\n\t\tconst currMap = getMap()\n\t\tif (currMap && gameState.metadata.isHost) {\n\t\t\tconst fogPaths = currMap.fogPaths\n\t\t\tconst drawPaths = currMap.drawPaths\n\t\t\tswitch (gameState.settings.tool) {\n\t\t\t\tcase 'fog':\n\t\t\t\t\tfogPaths.push(currentPath)\n\t\t\t\t\twebsocket.pushFog(currentPath)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'draw':\n\t\t\t\t\tdrawPaths.push(currentPath)\n\t\t\t\t\twebsocket.pushDraw(currentPath)\n\t\t\t\t\tbreak\n\t\t\t\tdefault: break\n\t\t\t}\n\t\t\tcurrentPath = []\n\t\t\tconst updatedMaps = gameState.game.maps.map((map) => {\n\t\t\t\treturn map.$id === currMap.$id ? {...currMap, fogPaths: fogPaths, drawPaths: drawPaths, } : map\n\t\t\t})\n\t\t\t\n\t\t\tsetGameState({\n\t\t\t\t...gameState,\n\t\t\t\tsettings: {\n\t\t\t\t\t...gameState.settings,\n\t\t\t\t\tmaps: updatedMaps,\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tconst onMouseDown = (e) => {\n\t\tfor (let x of [document.activeElement, e.target])\n\t\t\t//TODO: Check if we can use triple equal\n\t\t\tif ((x.tagName == 'INPUT' && (x.type === 'text' || x.type === 'number')) || (x.tagName == 'BUTTON')) /* eslint-disable-line eqeqeq */\n\t\t\t\treturn e\n\n\t\tif (e.buttons & 1) {\n\t\t\tif (!/(\\s|^)token(\\s|$)/.test(e.target.getAttribute('class')))\n\t\t\t\t//TODO: Update to map function\n\t\t\t\tupdateTokens(tok => { delete tok.$selected })\n\t\t\tcurrentPath = []\n\t\t\tcurrentPath.push({\n\t\t\t\tx: e.pageX,\n\t\t\t\ty: e.pageY,\n\t\t\t\tr: gameState.settings.fogRadius,\n\t\t\t\tr2: undefined,\n\t\t\t\ttool: currentTool(),\n\t\t\t\tdrawColor: gameState.settings.drawColor,\n\t\t\t\tdrawSize: gameState.settings.drawSize,\n\t\t\t})\n\t\t}\n\t}\n\n\tconst onMouseMove = (e) => {\n\t\tconst overlay = gameState.overlayRef\n\t\tif (!overlay)\n\t\t\treturn\n\t\tclearOverlay()\n\t\tlet x = e.pageX, y = e.pageY\n\t\tswitch (gameState.metadata.isHost ? gameState.settings.tool : 'move') {\n\t\t\tcase 'fog':\n\t\t\t\tupdateCurrentFogPath()\n\t\t\t\tsetPointerOutline(x, y, 'yellow', gameState.settings.fogRadius)\n\t\t\t\tbreak\n\t\t\tcase 'draw':\n\t\t\t\tupdateCurrentDrawPath()\n\t\t\t\tsetPointerOutline(x, y, gameState.settings.drawColor, gameState.settings.drawSize)\n\t\t\t\tbreak\n\t\t\tcase 'move':\n\t\t\t\tif (e.buttons & 1)\n\t\t\t\t\tdragSelectedTokens(e)\n\t\t\t\tbreak\n\t\t\tdefault: break\n\t\t}\n\t\tif ((gameState.settings.tool === 'fog' || gameState.settings.tool === 'draw') && (e.buttons & 1)) {\n\t\t\tcurrentPath.push({\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tr: gameState.settings.fogRadius,\n\t\t\t\tr2: undefined,\n\t\t\t\ttool: currentTool(),\n\t\t\t\tdrawColor: gameState.settings.drawColor,\n\t\t\t\tdrawSize: gameState.settings.drawSize,\n\t\t\t})\n\t\t}\n\t}\n\n\tconst currentTool = () => {\n\t\tconst isEraser = gameState.settings.subtool === 'eraser'\n\t\tswitch (gameState.settings.tool) {\n\t\t\tcase 'draw':\n\t\t\t\tif (isEraser) {\n\t\t\t\t\treturn 'erease'\n\t\t\t\t} else {\n\t\t\t\t\treturn 'draw'\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn gameState.settings.tool\n\t\t}\n\t}\n\n\t/****************************************************\n\t * Receiving Data                                   *\n\t ****************************************************/\n\tconst receiveData = (evt) => {\n\t\tlet data = JSON.parse(evt.data)\n\t\tconsole.log('receiving the following data', data)\n\t\tif (data.from === websocket.guid) {\n\t\t\treturn // ignore messages sent by self\n\t\t}\n\t\tif (data.to && (data.to !== websocket.guid)) {\n\t\t\treturn\t// ignore dedicated messages not directed to self\n\t\t}\n\t\tconst currMap = getMap()\n\t\tswitch (data.messageType) {\n\t\t\tcase 'cursor':\n\t\t\t\t/*\n\t\t\t\tif (data.u !== this.gameState.settings.username)\n\t\t\t\t\tthis.gameState.updateCursors(data.x, data.y, data.u, data.from)\n\t\t\t\t*/\n\t\t\t\tbreak\n\t\t\tcase 'draw':\n\t\t\t\tconst updatedMapsWithDraw = gameState.game.maps.map((map) => {\n\t\t\t\t\treturn map.$id === currMap.$id ? {...currMap, drawPaths: data.drawPath, } : map\n\t\t\t\t})\n\t\t\t\tsetGameState({\n\t\t\t\t\t...gameState,\n\t\t\t\t\tgame: {\n\t\t\t\t\t\t...gameState.game,\n\t\t\t\t\t\tmaps: updatedMapsWithDraw,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase 'fog': /* fog erasure */\n\t\t\t\tconst updatedMapsWithFog = gameState.game.maps.map((map) => {\n\t\t\t\t\treturn map.$id === currMap.$id ? {...currMap, fogPaths: data.fogPath, } : map\n\t\t\t\t})\n\t\t\t\tsetGameState({\n\t\t\t\t\t...gameState,\n\t\t\t\t\tgame: {\n\t\t\t\t\t\t...gameState.game,\n\t\t\t\t\t\tmaps: updatedMapsWithFog,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase 'fogReset': /* fog reset */\n\t\t\t\tconst updatedMapsWithFogReset = gameState.game.maps.map((map) => {\n\t\t\t\t\treturn map.$id === currMap.$id ? {...currMap, fogPaths: [], } : map\n\t\t\t\t})\n\t\t\t\tsetGameState({\n\t\t\t\t\t...gameState,\n\t\t\t\t\tgame: {\n\t\t\t\t\t\t...gameState.game,\n\t\t\t\t\t\tmaps: updatedMapsWithFogReset,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase 'drawReset':\n\t\t\t\tconst updatedMapsWithDrawReset = gameState.game.maps.map((map) => {\n\t\t\t\t\treturn map.$id === currMap.$id ? {...currMap, drawPaths: [], } : map\n\t\t\t\t})\n\t\t\t\tsetGameState({\n\t\t\t\t\t...gameState,\n\t\t\t\t\tgame: {\n\t\t\t\t\t\t...gameState.game,\n\t\t\t\t\t\tmaps: updatedMapsWithDrawReset,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase 't': /* token */\n\t\t\t\t/*\n\t\t\t\tconst local = this.gameState.game.tokens[data.i]\n\t\t\t\tconst token = Object.assign(local, data.a) // Keep and `$` attrs like `$selected`\n\t\t\t\tthis.gameState.updateTokenByIndex(data.i, token, true)\n\t\t\t\t*/\n\t\t\t\tbreak\n\t\t\tcase 'ts': /* all tokens */\n\t\t\t\t/*\n\t\t\t\tconst localTokensMap = this.gameState.game.tokens.reduce((out, tok) => {\n\t\t\t\t\tout[tok.guid] = tok\n\t\t\t\t\treturn out\n\t\t\t\t}, {})\n\t\t\t\tconst tokens = data.tokens.map(tok => Object.assign({}, localTokensMap[tok.guid], tok))\n\t\t\t\tthis.gameState.setState({tokens: tokens})\n\t\t\t\t*/\n\t\t\t\tbreak\n\t\t\tcase 'map': /* map id */\n\t\t\t\tsetGameState({\n\t\t\t\t\t...gameState,\n\t\t\t\t\tgame: {\n\t\t\t\t\t\t...gameState.game,\n\t\t\t\t\t\tmapId: parseInt(data.id),\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase 'maps':\n\t\t\t\tsetGameState({\n\t\t\t\t\t...gameState,\n\t\t\t\t\tgame: {\n\t\t\t\t\t\t...gameState.game,\n\t\t\t\t\t\tmaps: data.maps,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase 'refresh': /* refresh from host */\n\t\t\t\tif (data.to && data.to !== websocket.guid) {\n\t\t\t\t\tconsole.log(`Will not apply refresh from ${data.to} (self)`)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst newGameState = {\n\t\t\t\t\t...gameState,\n\t\t\t\t\tgame: {\n\t\t\t\t\t\t...gameState.game,\n\t\t\t\t\t\t...data.game,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tsetGameState(newGameState)\n\t\t\t\tbreak\n\t\t\tcase 'refreshRequest': /* refresh request from player */\n\t\t\t\tif (gameState.metadata.isHost) {\n\t\t\t\t\twebsocket.pushRefresh(gameState, { to: data.from, })\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tconsole.error(`Unrecognized websocket message type: ${data.t}`)\n\t\t}\n\t}\n\n\t/****************************************************\n\t * Helper Functions                                 *\n\t ****************************************************/\n\tconst notify = (msg, ttl, tag) => {\n\t\tconsole.log(msg)\n\t\tif (window.Notification) {\n\t\t\tif (window.Notification.permission !== 'granted')\n\t\t\t\twindow.Notification.requestPermission()\n\t\t\telse {\n\t\t\t\tconst note = new window.Notification(msg, {tag: tag})\n\t\t\t\tsetTimeout(() => note.close(), ttl || 1000)\n\t\t\t\treturn note\n\t\t\t}\n\t\t}\n\t}\n\n\tconst toJson = (additionalAttrs) => {\n\t\tconst map = getMap()\n\t\tconst newGeneration = 1 + (gameState.game.gen || 0)\n\t\t/* Generation is tracked so that we don't get refresh loops when multiple DMs exist. */\n\t\tif (gameState.metadata.isHost)\n\t\t\tsetGameState({\n\t\t\t\t...gameState,\n\t\t\t\tgame: {\n\t\t\t\t\t...gameState.game,\n\t\t\t\t\tgen: newGeneration,\n\t\t\t\t},\n\t\t\t})\n\t\tconst tokens = gameState.game.tokens.map(token => ({...token}))\n\t\ttokens.forEach(token => websocket.scrubObject(token))\n\t\tconst maps = dumpMaps()\n\t\tObject.values(maps).forEach(map => websocket.scrubObject(map))\n\t\tconst data = Object.assign({\n\t\t\tgen: newGeneration,\n\t\t\tmaps: maps,\n\t\t\tmapId: map && map.$id,\n\t\t\ttokens: tokens,\n\t\t}, additionalAttrs)\n\t\treturn JSON.stringify(data)\n\t}\n\n\tconst fromJson = (json) => {\n\t\tconst data = Object.assign(JSON.parse(json)||{})\n\t\tif (data.tokens) {\n\t\t\tdata.tokens.forEach(token => {\n\t\t\t\tif (!token.guid) token.guid = guid()\n\t\t\t})\n\t\t}\n\t\treturn new Promise(resolve => {\n\t\t\tsetGameState({\n\t\t\t\t...gameState,\n\t\t\t\tgame: {\n\t\t\t\t\t...gameState.game,\n\t\t\t\t\tdata,\n\t\t\t\t}\n\t\t\t})\n\t\t\tresolve()\n\t\t})\n\t}\n\n\tconst saveToLocalStorage = () => {\n\t\tif (gameState.game.isFirstLoadDone) {\n\t\t\tconsole.log('Saving game to local storage')\n\t\t\tlocalStorage.setItem(gameState.room, toJson())\n\t\t}\n\t}\n\n\tconst loadFromLocalStorage = () => {\n\t\t//TODO: Verify how come this does not work anymore\n\t\tconsole.log('Loading game from local storage')\n\t\treturn fromJson(localStorage.getItem(gameState.room))\n\t}\n\n\tfunction handleError (ex) {\n\t\tconsole.error(ex)\n\t\tconsole.error('Exception in `render`. Clearing localStorage...')\n\t\tlocalStorage.removeItem(gameState.room)\n\t\twindow.alert('Fatal error. Local storage cleared.')\n\t}\n\n\t/****************************************************\n\t * Component Render                                 *\n\t ****************************************************/\n\ttry {\n\t\treturn (\n\t\t\t<GameView \n\t\t\t\tgameState={ gameState } \n\t\t\t\tsetGameState={ setGameState } \n\t\t\t\tcontrolPanelState={ controlPanelState } \n\t\t\t\tsetControlPanelState={ setControlPanelState } \n\t\t\t\twebsocket={ websocket }\n\t\t\t\tonMouseMove={ onMouseMove } \n\t\t\t\tonMouseUp={ onMouseUp } \n\t\t\t\tonMouseDown={ onMouseDown } \n\t\t\t\tfromJson={ fromJson } \n\t\t\t\tnotify={ notify } \n\t\t\t\tinitAsDev={ initAsDev } \n\t\t\t\tupdateTokens={ updateTokens } \n\t\t\t\tupdateGameToken={ updateToken } \n\t\t\t\tselectGameToken={ selectToken } \n\t\t\t\tupdateMap={ updateMap } \n\t\t\t\tresetFog={ resetFog } \n\t\t\t\tresetDrawing={ resetDrawing } \n\t\t\t/>\n\t\t)\n\t} catch (ex) {\n\t\thandleError(ex)\n\t}\n}\n\nexport default Game\n","import guid from '../controllers/guid.js'\nrequire('dotenv').config()\n\nconst RETRY_INTERVAL = 2500\n\nconst K_SOCKET = 'gameWebSocket'\nconst K_INTERVAL = 'gameWebSocketInterval'\nconst K_DEBUG = process.env.REACT_APP_DEBUG || false\nconst SOCKET_SERVER_PORT = process.env.PORT || process.env.REACT_APP_PORT || 8000\n\nclass GameSocket {\n\tsetup( room ) {\n\t\tlet host = window.location.host.replace(/:\\d+$/, '')\n\t\tconst protocol = /https/.test(window.location.protocol) ? 'wss' : 'ws'\n\t\tthis.guid = guid()\n\t\tif (window[K_INTERVAL])\n\t\t\tclearInterval(window[K_INTERVAL])\n\t\tif (window[K_SOCKET]) {\n\t\t\tlet socket = window[K_SOCKET]\n\t\t\tdelete window[K_SOCKET] // Delete, then close, s.t. cb doesn't re-open it\n\t\t\tsocket.close()\n\t\t}\n\t\tif (K_DEBUG) {\n\t\t\twindow[K_SOCKET] = new WebSocket(`${protocol}://${host}:${SOCKET_SERVER_PORT}/${room}?guid=${this.guid}`)\n\t\t} else {\n\t\t\twindow[K_SOCKET] = new WebSocket(`${protocol}://${host}/${room}?guid=${this.guid}`)\n\t\t}\n\t}\n\n\taddCallbacks( isHost, receiveCallback ) {\n\t\tlet ws = window[K_SOCKET]\n\t\t// Connection callback\n\t\tws.addEventListener('open', (a,b,c) => {\n\t\t\tif (window[K_INTERVAL])\n\t\t\t\tclearInterval(window[K_INTERVAL])\n\t\t\tif (!isHost)\n\t\t\t\tthis.requestRefresh()\n\t\t})\n\t\t// Message callback\n\t\tws.addEventListener('message', receiveCallback)\n\t\t// Closed callback\n\t\tlet setup = this.setup.bind(this)\n\t\tws.addEventListener('close', () => {\n\t\t\twindow[K_INTERVAL] = setInterval(setup, RETRY_INTERVAL)\n\t\t})\n\t}\n\n\t// Send message to server\n\tsend(data) {\n\t\tdata.from = this.guid\n\t\tconsole.log('sending the following data:',data)\n\t\tif (window[K_SOCKET] && window[K_SOCKET].readyState === WebSocket.OPEN)\n\t\t\twindow[K_SOCKET].send(JSON.stringify(data))\n\t\telse\n\t\t\tconsole.error('no websocket')\n\t}\n\n\tpushCursor(x, y, username) {\n\t\tthis.send({\n\t\t\tmessageType: 'cursor', \n\t\t\tx: x, \n\t\t\ty: y, \n\t\t\tu: username,\n\t\t})\n\t}\n\n\tpushDraw(drawPath) {\n\t\tthis.send({\n\t\t\tmessageType: 'draw',\n\t\t\tdrawPath: drawPath,\n\t\t})\n\t}\n\n\tpushFog(fogPath) {\n\t\tthis.send({\n\t\t\tmessageType: 'fog', \n\t\t\tfogPath: fogPath,\n\t\t})\n\t}\n\n\tpushMaps(maps, mapId) {\n\t\tthis.send({\n\t\t\tmessageType: 'maps',\n\t\t\tmaps: maps,\n\t\t\tmapId: mapId,\n\t\t})\n\t}\n\n\tpushMapId(mapId) {\n\t\tthis.send({\n\t\t\tmessageType: 'map', \n\t\t\tid: mapId,\n\t\t})\n\t}\n\n\t/* Push refresh */\n\tpushRefresh(gameState) {\n\t\tthis.send({\n\t\t\tmessageType: 'refresh',\n\t\t\tgame: gameState.game,\n\t\t})\n\t}\n\n\t/* Push token update */\n\tpushToken(index, token) {\n\t\t/*\n\t\tconst tokenCopy = Object.assign({}, token)\n\t\tthis.scrubObject(tokenCopy)\n\t\tconst data = {messageType: 't', i: index, a: tokenCopy}\n\t\tthis.send(data)\n\t\t*/\n\t}\n\n\t/* Push replacement of all tokens */\n\tpushTokens(tokens) {\n\t\t/*\n\t\tif (!tokens)\n\t\t\treturn\n\t\tconst tokensCopy = JSON.parse(JSON.stringify(tokens))\n\t\tconst data = { messageType: 'ts', tokens: tokensCopy }\n\t\tdata.tokens.forEach(token => this.scrubObject(token))\n\t\tthis.send(data)\n\t\t*/\n\t}\n\n\trequestRefresh () {\n\t\tthis.send({\n\t\t\tmessageType: 'refreshRequest',\n\t\t})\n\t}\n\n\tscrubObject(object) {\n\t\tfor (let key in object)\n\t\t\tif (/^\\$/.test(key) && key !== '$id')\n\t\t\t\tdelete object[key]\n\t}\n}\n\nexport default GameSocket\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.css'\nimport './styles/Game.css'\nimport Game from './components/Game.js'\nimport GameSocket from './components/GameSocket.js'\nimport * as serviceWorker from './serviceWorker.js'\n\nconst params = new URLSearchParams(window.location.href.replace(/.*\\?/, ''))\nconst websocket = new GameSocket()\nwebsocket.setup(params.get('room'))\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Game websocket={ websocket } />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
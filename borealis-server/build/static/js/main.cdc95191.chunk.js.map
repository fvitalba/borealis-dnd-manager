{"version":3,"sources":["redux/constants.js","reducers/settingsReducer.js","reducers/metadataReducer.js","controllers/guid.js","reducers/gameReducer.js","hooks/useSocket.js","contexts/WebSocketProvider.js","controllers/drawImage.js","hooks/useCanvas.js","components/Canvas.js","components/Background.js","components/Drawing.js","components/Fog.js","components/Overlay.js","views/TokenView.js","components/Token.js","views/Cursor.js","views/Button.js","components/ToggleButton.js","views/ToolControlsView.js","components/ToolControls.js","views/MapConfigView.js","components/MapConfig.js","views/MapToolView.js","components/MapTool.js","views/HostTokenConfigView.js","views/GuestTokenConfigView.js","components/TokenConfig.js","views/TokenToolView.js","views/SelectedTokensControlsView.js","components/SelectedTokensControls.js","components/TokenTool.js","views/UserToolView.js","components/UserTool.js","components/ToolButton.js","views/ToolSelectView.js","views/ControlPanelView.js","components/ControlPanel.js","views/GameView.js","components/Game.js","components/App.js","serviceWorker.js","index.js"],"names":["CHANGE_CURSORSIZE","CHANGE_FOG_SETTINGS","CHANGE_DRAW_SETTINGS","CHANGE_TOOL","CHANGE_USERNAME","TOGGLE_MOUSESHARING","OVERWRITE_GAME","LOAD_MAP","INCREMENT_GEN","SET_FOG_ENABLED","SET_ISFOGLOADED","SET_ISFIRSTLOADDONE","UPDATE_MAPS","ADD_MAP","DELETE_MAP","UPDATE_TOKENS","ADD_TOKEN","DELETE_TOKEN","COPY_TOKEN","UPDATE_TOKEN_VALUE","TOGGLE_TOKEN_VALUE","SET_TOKEN_ORIGIN","RESET_FOG","RESET_DRAW","SET_GAMESETTINGS","SET_CURSORS","SET_LAST_COORDINATES","SET_DOWN_COORDINATES","initialSettingsState","cursorSize","fogOpacity","fogRadius","drawColor","drawSize","tool","subtool","undefined","username","URLSearchParams","window","location","href","replace","get","shareMouse","setCursorSize","newCursorSize","type","parseInt","setToolSettings","newTool","newSubtool","setUsername","newUsername","settingsReducer","state","action","initialMetadataState","isHost","room","cursors","lastX","lastY","downX","downY","metadataReducer","guid","c","r","crypto","getRandomValues","Uint32Array","Math","pow","toString","initialGameState","mapId","gen","width","innerWidth","height","innerHeight","fogEnabled","isFogLoaded","isFirstLoadDone","maps","tokens","defaultGameState","name","$id","imageUrl","x","y","drawPaths","fogPaths","url","ko","pc","$selected","$x0","$y0","loadMap","newMapId","setFogEnabled","newFogEnabled","updateMaps","newMaps","addMap","mapName","map","updateTokens","newTokens","toggleTokenValue","tokenGuidToUpdate","key","tokenGuid","gameReducer","JSON","parse","stringify","newToken","tokenToCopy","currMap","game","filter","isNaN","length","concat","token","value","xOrigin","yOrigin","useWebSocket","useContext","WebSocketContext","sendData","webSocket","data","readyState","WebSocket","OPEN","send","console","error","pushGameRefresh","wsSettings","additionalAttributes","from","requestRefresh","require","config","process","PORT","createWebSocket","webSocketUrl","host","protocol","test","generateWebSocketUrl","createContext","connect","metadata","children","useState","setWsSettings","ws","setWs","useEffect","onClose","setTimeout","log","onOpen","onError","err","addEventListener","removeEventListener","Provider","drawImage","which","context","trim","Promise","resolve","reject","img","Image","onload","clearRect","onerror","src","useCanvas","draw","options","canvasRef","useRef","current","getContext","Canvas","id","rest","ref","selectedMap","ctx","getMap","currPath","globalCompositeOperation","beginPath","pointId","lineCap","fillStyle","lineWidth","strokeStyle","moveTo","lineTo","erease","className","pathId","stroke","settings","ereaseFog","gradient","createRadialGradient","r2","addColorStop","fillRect","style","opacity","overlayRef","TokenView","divStyle","classes","imgStyle","onMouseDown","title","join","e","alt","mapDispatchToProps","setTokenOrigin","left","top","updatedTokensWithSelection","currToken","Cursor","cursor","size","fontSize","role","u","Button","onClick","isSelected","disabled","ToggleButton","controlPanelState","setControlPanelState","toggleKey","ToolControlsView","setDrawColor","setDrawSize","setFogOpacity","setFogRadius","setSubtool","resetFog","resetDrawing","onChange","target","step","min","backgroundColor","max","setDrawToolSettings","newDrawColor","newDrawSize","setFogToolSettings","newFogOpacity","newFogRadius","resetDraw","newSize","newOpacity","newRadius","MapConfigView","mapConfigState","load","onTextChange","onIntegerChange","deleteMap","placeholder","mapIdToDelete","existingMap","mapElement","currentMap","w","h","initialMapConfigState","setMapConfigState","updatedMaps","pushMapState","evt","confirm","MapToolView","newMapName","setNewMapName","createMap","toggleOnMaps","newWidth","newHeight","pushCreateMap","HostTokenConfigView","copy","onToggle","selectToken","onMapSelect","deleteToken","defaultValue","GuestTokenConfigView","tokenGuidToDelete","copyToken","tokenGuidToCopy","updateTokenValue","TokenToolView","newTokenUrl","setNewTokenUrl","createToken","$i","SelectedTokensControlsView","filteredTokens","t","addToken","tokenName","tokenUrl","toggleOnTokens","UserToolView","initAsDev","toggleFog","copyJson","pasteJson","updateUsername","updateCursorSize","loadDefaultBattleGame","toggleOnUser","mapsExist","tokensExist","pushFogEnabled","ToolSelectView","ControlPanelView","hidden","toggleHidden","socketRequestRefresh","pushRefreshToPlayers","initialControlPanelState","GameView","onMouseMove","onMouseUp","goneClass","setGameSettings","newIsHost","newRoom","overwriteGame","newGame","newGameUpdated","incrementGen","React","mousePosition","setMousePosition","currentPath","setPointerOutline","color","radius","arc","PI","closePath","onResize","onKeyDown","currentTool","isEraser","saveToLocalStorage","receiveData","useCallback","to","pathToUpdate","updatedTokens","push","drawPath","fogPath","tokenSelected","currentToken","token2","params","document","deadline","Date","cursorsCopy","time","clearOverlay","pageX","pageY","currentlySelectedTool","updateCurrentFogPath","updateCurrentDrawPath","buttons","dragSelectedTokens","newFogPath","pushFogPath","newDrawPath","pushDrawPath","deselectTokens","activeElement","toUpperCase","pushTokens","tagName","ex","localStorage","removeItem","alert","handleError","App","combinedReducer","combineReducers","store","createStore","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cdc95191.chunk.js","sourcesContent":["// settings\nexport const CHANGE_CURSORSIZE = 'SETTINGS/CHANGE_CURSORSIZE'\nexport const CHANGE_FOG_SETTINGS = 'SETTINGS/CHANGE_FOG_SETTINGS'\nexport const CHANGE_DRAW_SETTINGS = 'SETTINGS/CHANGE_DRAW_SETTINGS'\nexport const CHANGE_TOOL = 'SETTINGS/CHANGE_TOOL'\nexport const CHANGE_USERNAME = 'SETTINGS/CHANGE_USERNAME'\nexport const TOGGLE_MOUSESHARING = 'SETTINGS/TOGGLE_MOUSESHARING'\n\n// game\nexport const OVERWRITE_GAME = 'GAME/OVERWRITE_GAME'\nexport const LOAD_MAP = 'GAME/LOAD_MAP'\nexport const INCREMENT_GEN = 'GAME/INCREMENT_GEN'\nexport const SET_FOG_ENABLED = 'GAME/SET_FOG_ENABLED'\nexport const SET_ISFOGLOADED = 'GAME/SET_ISFOGLOADED'\nexport const SET_ISFIRSTLOADDONE = 'GAME/SET_ISFIRSTLOADDONE'\nexport const UPDATE_MAPS = 'GAME/UPDATE_MAPS'\nexport const ADD_MAP = 'GAME/ADD_MAP'\nexport const DELETE_MAP = 'GAME/DELETE_APP'\nexport const UPDATE_TOKENS = 'GAME/UPDATE_TOKENS'\nexport const ADD_TOKEN = 'GAME/ADD_TOKEN'\nexport const DELETE_TOKEN = 'GAME/DELETE_TOKEN'\nexport const COPY_TOKEN = 'GAME/COPY_TOKEN'\nexport const UPDATE_TOKEN_VALUE = 'GAME/UPDATE_TOKEN_VALUE'\nexport const TOGGLE_TOKEN_VALUE = 'GAME/TOGGLE_TOKEN_VALUE'\nexport const SET_TOKEN_ORIGIN = 'GAME/SET_TOKEN_ORIGIN'\nexport const RESET_FOG = 'GAME/RESET_FOG'\nexport const RESET_DRAW = 'GAME/RESET_DRAW'\n\n// metadata\nexport const SET_GAMESETTINGS = 'METADATA/SET_GAMESETTINGS'\nexport const SET_ISHOST = 'METADATA/SET_ISHOST'\nexport const SET_ROOM = 'METADATA/ROOM'\nexport const SET_CURSORS = 'METADATA/SET_CURSORS'\nexport const SET_LAST_COORDINATES = 'METADATA/SET_LAST_COORDINATES'\nexport const SET_DOWN_COORDINATES = 'METADATA/SET_DOWN_COORDINATES'\n\n// controlpanel\n//TODO: Add control panel actions\n","import {\n    CHANGE_CURSORSIZE,\n    CHANGE_FOG_SETTINGS,\n    CHANGE_DRAW_SETTINGS,\n    CHANGE_TOOL,\n    CHANGE_USERNAME,\n    TOGGLE_MOUSESHARING\n} from '../redux/constants'\n\nconst initialSettingsState = () => {\n    const params = new URLSearchParams(window.location.href.replace(/.*\\?/, ''))\n    return {\n        cursorSize: 50,\n        fogOpacity: 0.5,\n        fogRadius: 75,\n        drawColor: 'white',\n        drawSize: 8,\n        tool: 'move',\n        subtool: undefined,\n        username: params.get('host') ? 'DM' : 'PC',\n        shareMouse: true,\n    }\n}\n\nconst settingsReducer = (state = initialSettingsState(), action) => {\n    switch (action.type) {\n    case CHANGE_CURSORSIZE:\n        return {\n            ...state,\n            cursorSize: action.cursorSize,\n        }\n    case CHANGE_FOG_SETTINGS:\n        return {\n            ...state,\n            fogOpacity: action.fogOpacity,\n            fogRadius: action.fogRadius,\n        }\n    case CHANGE_DRAW_SETTINGS:\n        return {\n            ...state,\n            drawColor: action.drawColor,\n            drawSize: action.drawSize,\n        }\n    case CHANGE_TOOL:\n        return {\n            ...state,\n            tool: action.tool,\n            subtool: action.subtool,\n        }\n    case CHANGE_USERNAME:\n        return {\n            ...state,\n            username: action.username,\n        }\n    case TOGGLE_MOUSESHARING:\n        return {\n            ...state,\n            shareMouse: !state.shareMouse,\n        }\n    default:\n        return state\n    }\n}\n\n//#region Action Creators\nexport const setCursorSize = (newCursorSize) => {\n    return {\n        type: CHANGE_CURSORSIZE,\n        cursorSize: parseInt(newCursorSize),\n    }\n}\n\nexport const setFogToolSettings = (newFogOpacity, newFogRadius) => {\n    return {\n        type: CHANGE_FOG_SETTINGS,\n        fogOpacity: newFogOpacity,\n        fogRadius: parseInt(newFogRadius),\n    }\n}\n\nexport const setDrawToolSettings = (newDrawColor, newDrawSize) => {\n    return {\n        type: CHANGE_DRAW_SETTINGS,\n        drawColor: newDrawColor,\n        drawSize: parseInt(newDrawSize),\n    }\n}\n\nexport const setToolSettings = (newTool, newSubtool) => {\n    return {\n        type: CHANGE_TOOL,\n        tool: newTool,\n        subtool: newSubtool,\n    }\n}\n\nexport const setUsername = (newUsername) => {\n    return {\n        type: CHANGE_USERNAME,\n        username: newUsername,\n    }\n}\n\nexport const toggleMousesharing = () => {\n    return {\n        type: TOGGLE_MOUSESHARING,\n    }\n}\n//#endregion Action Creators\n\nexport default settingsReducer\n","import {\n    SET_GAMESETTINGS,\n    /* SET_ISHOST,\n    SET_ROOM,*/\n    SET_CURSORS,\n    SET_LAST_COORDINATES,\n    SET_DOWN_COORDINATES\n} from '../redux/constants'\n\nconst initialMetadataState = {\n    isHost: undefined,\n    room: undefined,\n    cursors: [],\n    lastX: undefined,\n    lastY: undefined,\n    downX: undefined,\n    downY: undefined,\n}\n\nconst metadataReducer = (state = initialMetadataState, action) => {\n    switch (action.type) {\n    case SET_GAMESETTINGS:\n        return {\n            ...state,\n            isHost: action.isHost,\n            room: action.room,\n        }\n        //TODO: Delete if unused\n    /*\n    case SET_ISHOST:\n        return {\n            ...state,\n            isHost: action.isHost,\n        }\n    case SET_ROOM:\n        return {\n            ...state,\n            room: action.room,\n        }\n    */\n    case SET_CURSORS:\n        return {\n            ...state,\n            cursors: action.cursors,\n        }\n    case SET_LAST_COORDINATES:\n        return {\n            ...state,\n            lastX: action.lastX,\n            lastY: action.lastY,\n        }\n    case SET_DOWN_COORDINATES:\n        return {\n            ...state,\n            downX: action.downX,\n            downY: action.downY,\n        }\n    default:\n        return state\n    }\n}\n\n//#region Action Creators\nexport const setGameSettings = (newIsHost, newRoom) => {\n    return {\n        type: SET_GAMESETTINGS,\n        isHost: newIsHost,\n        room: newRoom,\n    }\n}\n\n//TODO: Delete if unused\n/*\nexport const setIsHost = (newIsHost) => {\n    return {\n        type: SET_ISHOST,\n        isHost: newIsHost,\n    }\n}\n\nexport const setRoom = (newRoom) => {\n    return {\n        type: SET_ROOM,\n        room: newRoom,\n    }\n}\n*/\n\nexport const setCursors = (newCursors) => {\n    return {\n        type: SET_CURSORS,\n        cursors: newCursors,\n    }\n}\n\nexport const setLastCoordinates = (newLastX, newLastY) => {\n    return {\n        type: SET_LAST_COORDINATES,\n        lastX: newLastX,\n        lastY: newLastY,\n    }\n}\n\nexport const setDownCoordinates = (newDownX, newDownY) => {\n    return {\n        type: SET_DOWN_COORDINATES,\n        downX: newDownX,\n        downY: newDownY,\n    }\n}\n//#endregion Action Creators\n\nexport default metadataReducer\n","const guid = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        const r = (window.crypto.getRandomValues(new Uint32Array(1))[0] * Math.pow(2,-32) * 16) | 0\n        const v = c === 'x' ? r : (r & 0x3 | 0x8) /* eslint-disable-line no-mixed-operators */\n        return v.toString(16)\n    })\n}\nexport default guid\n","import {\n    OVERWRITE_GAME,\n    LOAD_MAP,\n    INCREMENT_GEN,\n    SET_FOG_ENABLED,\n    SET_ISFIRSTLOADDONE,\n    SET_ISFOGLOADED,\n    UPDATE_MAPS,\n    ADD_MAP,\n    DELETE_MAP,\n    UPDATE_TOKENS,\n    ADD_TOKEN,\n    DELETE_TOKEN,\n    COPY_TOKEN,\n    UPDATE_TOKEN_VALUE,\n    TOGGLE_TOKEN_VALUE,\n    SET_TOKEN_ORIGIN,\n    RESET_FOG,\n    RESET_DRAW\n} from '../redux/constants'\nimport guid from '../controllers/guid.js'\n\nconst initialGameState = {\n    mapId: undefined,\n    gen: 0,\n    width: window.innerWidth,\n    height: window.innerHeight,\n    fogEnabled: false,\n    isFogLoaded: false,\n    isFirstLoadDone: false, /* Ensure we don't overwrite localStorage before load is done */\n    maps: [],\n    tokens: [],\n}\n\nconst defaultGameState = {\n    ...initialGameState,\n    mapId: 0,\n    isFogLoaded: true,\n    isFirstLoadDone: true,\n    width: 795,\n    height: 555,\n    maps: [{\n        name: 'Dragon\\'s Lair',\n        $id: 0,\n        imageUrl: 'https://mk0a2minutetabl7hq7i.kinstacdn.com/wp-content/uploads/2022/02/Arena-of-Fire-battle-map-Main-preview-Night.jpg',\n        x: 0,\n        y: 0,\n        width: 795,\n        height: 555,\n        drawPaths: [],\n        fogPaths: [],\n    },\n    {\n        name: 'Mage Tower',\n        $id: 1,\n        imageUrl: 'https://2minutetabletop.com/wp-content/uploads/2022/01/Wizarding-School-Classroom-Basic-Light-16x22-1.jpg',\n        x: 0,\n        y: 0,\n        width: 795,\n        height: 555,\n        drawPaths: [],\n        fogPaths: [],\n    }],\n    tokens: [{\n        guid: guid(),\n        name: 'Adult Black Dragon',\n        url: 'https://i.imgur.com/H2dyKur.png',\n        mapId: 0,\n        x: 350,\n        y: 210,\n        ko: false,\n        pc: false,\n        width: 100,\n        height: 100,\n        $selected: false,\n        $x0: 0,\n        $y0: 0,\n    },\n    {\n        guid: guid(),\n        name: 'Mighty Paladin',\n        url: 'https://i.imgur.com/ccQxtZ7.png',\n        mapId: 0,\n        x: 50,\n        y: 180,\n        ko: false,\n        pc: true,\n        width: 50,\n        height: 50,\n        $selected: false,\n        $x0: 0,\n        $y0: 0,\n    },\n    {\n        guid: guid(),\n        name: 'Misterious Wizard',\n        url: 'https://i.imgur.com/82s9UPR.png',\n        mapId: 1,\n        x: 620,\n        y: 250,\n        ko: false,\n        pc: false,\n        width: 50,\n        height: 50,\n        $selected: false,\n        $x0: 0,\n        $y0: 0,\n    }]\n}\n\nconst gameReducer = (state = initialGameState, action) => {\n    const maps = JSON.parse(JSON.stringify(state.maps))\n    const tokens = JSON.parse(JSON.stringify(state.tokens))\n\n    let newMapId = undefined\n    let newTokens = []\n    let newMaps = []\n    let newToken = {}\n    let tokenToCopy = {}\n    let currMap = {}\n\n    switch (action.type) {\n    case OVERWRITE_GAME:\n        return {\n            ...state,\n            ...action.game,\n        }\n    case LOAD_MAP:\n        currMap = maps.filter((map) => map.$id === parseInt(action.mapId))[0]\n        return {\n            ...state,\n            mapId: parseInt(action.mapId),\n            width: currMap.width ? currMap.width : state.width,\n            height: currMap.height ? currMap.height : state.height,\n            isFogLoaded: true,\n            isFirstLoadDone: true,\n        }\n    case INCREMENT_GEN:\n        return {\n            ...state,\n            gen: state.gen + 1,\n        }\n    case SET_FOG_ENABLED:\n        return {\n            ...state,\n            fogEnabled: action.fogEnabled,\n        }\n    case SET_ISFOGLOADED:\n        return {\n            ...state,\n            isFogLoaded: action.isFogLoaded,\n        }\n    case SET_ISFIRSTLOADDONE:\n        return {\n            ...state,\n            isFirstLoadDone: action.isFirstLoadDone,\n        }\n    case UPDATE_MAPS:\n        return {\n            ...state,\n            maps: action.maps,\n            mapId: !isNaN(state.mapId) ? state.mapId : undefined,\n        }\n    case ADD_MAP:\n        newMapId = state.maps.length\n        newMaps = maps.concat({\n            ...action.map,\n            $id: newMapId,\n        })\n\n        newMapId = !isNaN(state.mapId) ? state.mapId : newMapId\n        currMap = newMaps.filter((map) => map.$id === newMapId)[0]\n        return {\n            ...state,\n            maps: newMaps,\n            mapId: newMapId,\n            isFirstLoadDone: true,\n            isFogLoaded: true,\n            width: currMap.width ? currMap.width : state.width,\n            height: currMap.height ? currMap.height : state.height,\n        }\n    case DELETE_MAP:\n        newMaps = maps.filter((map) => map.$id !== parseInt(action.mapId))\n        return {\n            ...state,\n            maps: newMaps,\n            mapId: parseInt(action.mapId) === state.mapId ? undefined : state.mapId,\n        }\n    case UPDATE_TOKENS:\n        return {\n            ...state,\n            tokens: action.tokens,\n        }\n    case ADD_TOKEN:\n        return {\n            ...state,\n            tokens: state.tokens.concat(action.token)\n        }\n    case DELETE_TOKEN:\n        newTokens = tokens.filter((token) => token.guid !== action.tokenGuid)\n        return {\n            ...state,\n            tokens: newTokens,\n        }\n    case COPY_TOKEN:\n        tokenToCopy = state.tokens.filter((token) => token.guid === action.tokenGuid)\n        newToken = {\n            ...tokenToCopy[0],\n            guid: guid()\n        }\n        return {\n            ...state,\n            tokens: state.tokens.concat(newToken)\n        }\n    case UPDATE_TOKEN_VALUE:\n        newTokens = state.tokens.map((token) => {\n            return token.guid !== action.tokenGuid ? token : {\n                ...token,\n                [action.key]: action.value\n            }\n        })\n        return {\n            ...state,\n            tokens: newTokens,\n        }\n    case TOGGLE_TOKEN_VALUE:\n        newTokens = state.tokens.map((token) => {\n            return token.guid !== action.tokenGuid ? token : {\n                ...token,\n                [action.key]: !token[action.key]\n            }\n        })\n        return {\n            ...state,\n            tokens: newTokens,\n        }\n    case SET_TOKEN_ORIGIN:\n        newTokens = state.tokens.map((token) => {\n            return token.guid !== action.tokenGuid ? token : {\n                ...token,\n                $x0: action.xOrigin,\n                $y0: action.yOrigin,\n            }\n        })\n        return {\n            ...state,\n            tokens: newTokens,\n        }\n    case RESET_FOG:\n        newMaps = state.maps.map((map) => {\n            return map.$id === state.mapId ? {\n                ...map,\n                fogPaths: [],\n            }\n                : map\n        })\n        return {\n            ...state,\n            maps: newMaps,\n        }\n    case RESET_DRAW:\n        newMaps = state.maps.map((map) => {\n            return map.$id === state.mapId ? {\n                ...map,\n                drawPaths: [],\n            }\n                : map\n        })\n        return {\n            ...state,\n            maps: newMaps,\n        }\n    default:\n        return state\n    }\n}\n\n//#region Action Creators\nexport const overwriteGame = (newGame) => {\n    const newGameUpdated = {\n        ...newGame,\n        tokens: newGame.tokens.map((token) => {\n            return {\n                ...token,\n                $selected: false,\n                $x0: 0,\n                $y0: 0,\n            }\n        })\n    }\n    return {\n        type: OVERWRITE_GAME,\n        game: newGameUpdated,\n    }\n}\n\nexport const loadDefaultBattleGame = () => {\n    return {\n        type: OVERWRITE_GAME,\n        game: defaultGameState,\n    }\n}\n\nexport const loadMap = (newMapId) => {\n    return {\n        type: LOAD_MAP,\n        mapId: parseInt(newMapId),\n    }\n}\n\nexport const incrementGen = () => {\n    return {\n        type: INCREMENT_GEN,\n    }\n}\n\nexport const setFogEnabled = (newFogEnabled) => {\n    return {\n        type: SET_FOG_ENABLED,\n        fogEnabled: newFogEnabled,\n    }\n}\n\nexport const setIsFogLoaded = (newIsFogLoaded) => {\n    return {\n        type: SET_ISFOGLOADED,\n        isFogLoaded: newIsFogLoaded,\n    }\n}\n\nexport const setIsFirstLoadDone = (newIsFirstLoadDone) => {\n    return {\n        type: SET_ISFIRSTLOADDONE,\n        isFirstLoadDone: newIsFirstLoadDone,\n    }\n}\n\nexport const updateMaps = (newMaps) => {\n    return {\n        type: UPDATE_MAPS,\n        maps: newMaps,\n    }\n}\n\nexport const addMap = (mapName, width, height) => {\n    const newMap = {\n        name: mapName,\n        $id: 0,\n        imageUrl: '',\n        x: 0,\n        y: 0,\n        width: width,\n        height: height,\n        drawPaths: [],\n        fogPaths: [],\n    }\n\n    return {\n        type: ADD_MAP,\n        map: newMap,\n    }\n}\n\nexport const deleteMap = (mapIdToDelete) => {\n    return {\n        type: DELETE_MAP,\n        mapId: mapIdToDelete,\n    }\n}\n\nexport const updateTokens = (newTokens) => {\n    return {\n        type: UPDATE_TOKENS,\n        tokens: newTokens,\n    }\n}\n\nexport const addToken = (tokenName, tokenUrl, mapId) => {\n    const newToken = {\n        guid: guid(),\n        name: tokenName,\n        url: tokenUrl,\n        mapId: mapId,\n        $selected: false,\n        $x0: 0,\n        $y0: 0,\n        x: 0,\n        y: 0,\n        ko: false,\n        pc: false,\n        w: 0,\n        h: 0,\n    }\n\n    return {\n        type: ADD_TOKEN,\n        token: newToken,\n    }\n}\n\nexport const deleteToken = (tokenGuidToDelete) => {\n    return {\n        type: DELETE_TOKEN,\n        tokenGuid: tokenGuidToDelete,\n    }\n}\n\nexport const copyToken = (tokenGuidToCopy) => {\n    return {\n        type: COPY_TOKEN,\n        tokenGuid: tokenGuidToCopy,\n    }\n}\n\nexport const updateTokenValue = (tokenGuidToUpdate, key, value) => {\n    return {\n        type: UPDATE_TOKEN_VALUE,\n        tokenGuid: tokenGuidToUpdate,\n        key: key,\n        value: value,\n    }\n}\n\nexport const toggleTokenValue = (tokenGuidToUpdate, key) => {\n    return {\n        type: TOGGLE_TOKEN_VALUE,\n        tokenGuid: tokenGuidToUpdate,\n        key: key,\n    }\n}\n\nexport const setTokenOrigin = (tokenGuidToUpdate, xOrigin, yOrigin) => {\n    return {\n        type: SET_TOKEN_ORIGIN,\n        tokenGuid: tokenGuidToUpdate,\n        xOrigin: parseInt(xOrigin),\n        yOrigin: parseInt(yOrigin),\n    }\n}\n\nexport const resetFog = () => {\n    return {\n        type: RESET_FOG,\n    }\n}\n\nexport const resetDraw = () => {\n    return {\n        type: RESET_DRAW,\n    }\n}\n//#endregion Action Creators\n\nexport default gameReducer\n","import { useContext } from 'react'\nimport { WebSocketContext } from '../contexts/WebSocketProvider'\n\nexport const useWebSocket = () => {\n    const webSocket = useContext(WebSocketContext)\n    return webSocket\n}\n\nconst sendData = (webSocket, data) => {\n    if (webSocket && webSocket.readyState === WebSocket.OPEN)\n        webSocket.send(JSON.stringify(data))\n    else\n        console.error('no websocket')\n}\n\nexport const pushCursor = (webSocket, wsSettings, x, y) => {\n    sendData(webSocket, {\n        type: 'pushCursor',\n        from: wsSettings.guid,\n        username: wsSettings.username,\n        x: x,\n        y: y,\n    })\n}\n\nexport const pushDrawPath = (webSocket, wsSettings, newDrawPath) => {\n    sendData(webSocket, {\n        type: 'pushDrawPath',\n        from: wsSettings.guid,\n        username: wsSettings.username,\n        drawPath: newDrawPath,\n    })\n}\n\nexport const pushDrawReset = (webSocket, wsSettings) => {\n    sendData(webSocket, {\n        type: 'pushDrawReset',\n        from: wsSettings.guid,\n        username: wsSettings.username,\n    })\n}\n\nexport const pushFogPath = (webSocket, wsSettings, newFogPath) => {\n    sendData(webSocket, {\n        type: 'pushFogPath',\n        from: wsSettings.guid,\n        username: wsSettings.username,\n        fogPath: newFogPath,\n    })\n}\n\nexport const pushFogReset = (webSocket, wsSettings) => {\n    sendData(webSocket, {\n        type: 'pushFogReset',\n        from: wsSettings.guid,\n        username: wsSettings.username,\n    })\n}\n\nexport const pushMapState = (webSocket, wsSettings, maps, mapId) => {\n    sendData(webSocket, {\n        type: 'pushMapState',\n        from: wsSettings.guid,\n        username: wsSettings.username,\n        maps: maps,\n        mapId: mapId,\n    })\n}\n\nexport const pushMapId = (webSocket, wsSettings, mapId) => {\n    sendData(webSocket, {\n        type: 'pushMapId',\n        from: wsSettings.guid,\n        username: wsSettings.username,\n        mapId: mapId,\n    })\n}\n\nexport const pushCreateMap = (webSocket, wsSettings, newMapName, newWidth, newHeight) => {\n    sendData(webSocket, {\n        type: 'pushCreateMap',\n        from: wsSettings.guid,\n        mapName: newMapName,\n        width: newWidth,\n        height: newHeight,\n    })\n}\n\nexport const pushFogEnabled = (webSocket, wsSettings, newFogEnabled) => {\n    sendData(webSocket, {\n        type: 'pushFogEnabled',\n        from: wsSettings.guid,\n        fogEnabled: newFogEnabled,\n    })\n}\n\nexport const pushGameRefresh = (webSocket, wsSettings, game, additionalAttributes) => {\n    sendData(webSocket, {\n        type: 'pushGameRefresh',\n        from: wsSettings.guid,\n        username: wsSettings.username,\n        game: game,\n        ...additionalAttributes,\n    })\n}\n\nexport const pushSingleToken = (webSocket, wsSettings, token) => {\n    sendData(webSocket, {\n        type: 'pushSingleToken',\n        from: wsSettings.guid,\n        token: token,\n    })\n}\n\nexport const pushTokens = (webSocket, wsSettings, tokens) => {\n    sendData(webSocket, {\n        type: 'pushTokens',\n        from: wsSettings.guid,\n        tokens: tokens,\n    })\n}\n\nexport const requestRefresh = (webSocket, wsSettings) => {\n    sendData(webSocket, {\n        type: 'requestRefresh',\n        from: wsSettings.guid,\n        username: wsSettings.username,\n    })\n}\n","import React, { useEffect, useState, createContext } from 'react'\nimport { connect } from 'react-redux'\nimport { requestRefresh } from '../hooks/useSocket'\nimport guid from '../controllers/guid'\nrequire('dotenv').config()\n\nconst DEBUG_MODE = process.env.NODE_ENV === 'production' ? false : true\nconst SOCKET_RECONNECTION_TIMEOUT = 2500\nconst SOCKET_SERVER_PORT = process.env.PORT || process.env.REACT_APP_PORT || 8000\n\nconst generateWebSocketUrl = (room, guid) => {\n    let host = window.location.host.replace(/:\\d+$/, '')\n    const protocol = /https/.test(window.location.protocol) ? 'wss' : 'ws'\n\n    return DEBUG_MODE\n        ? `${protocol}://${host}:${SOCKET_SERVER_PORT}/${room}?guid=${guid}`\n        : `${protocol}://${host}/${room}?guid=${guid}`\n}\n\nconst createWebSocket = (room, guid) => {\n    if (room) {\n        const webSocketUrl = generateWebSocketUrl(room, guid)\n        return new WebSocket(webSocketUrl)\n    } else {\n        return undefined\n    }\n}\n\nexport const WebSocketContext = createContext(createWebSocket('',''))\n\nconst WebSocketProvider = ({ children, metadata }) => {\n    const [wsSettings, setWsSettings] = useState({\n        guid: guid(),\n        username: '',\n    })\n    const [ws, setWs] = useState(createWebSocket(metadata.room, wsSettings.guid))\n\n    useEffect(() => {\n        setWs(createWebSocket(metadata.room, wsSettings.guid))\n    }, [metadata.room, wsSettings.guid])\n\n    useEffect(() => {\n        const onClose = () => {\n            setTimeout(() => {\n                console.log('Socket Timeout, recreating WebSocket')\n                setWs(createWebSocket(metadata.room, wsSettings.guid))\n            }, SOCKET_RECONNECTION_TIMEOUT)\n        }\n\n        const onOpen = () => {\n            if (!metadata.isHost) {\n                requestRefresh(ws, wsSettings)\n            }\n        }\n\n        const onError = (err) => {\n            console.error('WebSocket could not be created. Error: ',err)\n        }\n\n        if (ws) {\n            ws.addEventListener('close', onClose)\n            ws.addEventListener('open', onOpen)\n            ws.addEventListener('error', onError)\n        }\n\n        return () => {\n            if (ws) {\n                ws.removeEventListener('close', onClose)\n                ws.removeEventListener('open', onOpen)\n                ws.removeEventListener('error', onError)\n            }\n        }\n    }, [ ws, setWs, wsSettings, metadata ])\n\n    return (\n        <WebSocketContext.Provider value={ [ws, wsSettings, setWsSettings] }>{ children }</WebSocketContext.Provider>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        metadata: state.metadata,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(WebSocketProvider)\n","const drawImage = (url, which, map, context) => {\n    // Handle 'whiteboard' (no bg img)\n    if ((!url) || (url.trim().length === 0)) {\n        context.clearRect(map.x, map.y, map.width, map.height)\n        return Promise.resolve(map.width, map.height)\n    }\n\n    //Handle ordinary image\n    return new Promise((resolve, reject) => {\n        const img = new Image(map.width, map.height)\n        img.onload = () => {\n            context.clearRect(map.x, map.y, map.width, map.height)\n            context.drawImage(img, map.x, map.y, map.width, map.height)\n            resolve(map.width, map.height)\n        }\n        img.onerror = (err) => {\n            console.error('Unable to draw image.', img.src, err)\n            reject(`Unable to draw ${which}'s Image Url.`)\n        }\n        img.src = url\n    })\n}\n\nexport default drawImage\n","import { useRef, useEffect } from 'react'\n\nconst useCanvas = (draw, options={}) => {\n    const canvasRef = useRef(null)\n\n    useEffect(() => {\n        const canvas = canvasRef.current\n        const context = canvas.getContext(options.context || '2d')\n\n        draw(context)\n    }, [draw])\n\n    return canvasRef\n}\nexport default useCanvas\n","import React from 'react'\nimport useCanvas from '../hooks/useCanvas'\n\nconst Canvas = ({ id, draw, ...rest }) => {\n    const canvasRef = useCanvas(draw)\n\n    return (\n        <canvas id={ id } ref={ canvasRef } { ...rest } />\n    )\n}\n\nexport default Canvas\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport drawImage from '../controllers/drawImage'\nimport Canvas from './Canvas.js'\n\n\nconst Background = ({ game }) => {\n    const selectedMap = game.maps.filter((map) => map.$id === game.mapId)\n    const map = selectedMap.length > 0 ? selectedMap[0] : undefined\n\n    const draw = (ctx) => {\n        if (!map) {\n            return\n        }\n        drawImage(map.imageUrl, map.name, map, ctx, null)\n    }\n\n    return (\n        <Canvas\n            id='background'\n            width={ map ? map.width : 0 }\n            height={ map ? map.height : 0 }\n            draw={ draw } />\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        game: state.game,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Background)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Canvas from './Canvas'\n\nconst Drawing = ({ game }) => {\n    const width = game.width\n    const height = game.height\n\n    const getMap = () => {\n        if (game.maps.length === 0)\n            return undefined\n        const currMap = game.maps.filter((map) => parseInt(map.$id) === parseInt(game.mapId))\n        return currMap.length > 0 ? currMap[0] : game.maps[0]\n    }\n    const map = getMap()\n\n    const renderDrawingLayer = (ctx) => {\n        if (!map) {\n            return\n        }\n        if (!ctx)\n            return\n\n        ctx.beginPath()\n        ctx.clearRect(0, 0, width, height)\n        for(let pathId = 0; pathId < map.drawPaths.length; pathId++) {\n            const currPath = map.drawPaths[pathId]\n            const tool = currPath.length > 0 ? currPath[0].tool : ''\n            switch (tool) {\n            case 'draw':\n                draw(ctx, currPath)\n                break\n            case 'erease':\n                erease(ctx, currPath)\n                break\n            default:\n                break\n            }\n            ctx.stroke()\n        }\n    }\n\n    const draw = (ctx, currPath) => {\n        ctx.globalCompositeOperation = 'source-over'\n        ctx.beginPath()\n        for (let pointId = 0; pointId < currPath.length; pointId++) {\n            ctx.lineCap = 'round'\n            ctx.fillStyle = currPath[pointId].drawColor\n            ctx.lineWidth = currPath[pointId].drawSize\n            ctx.strokeStyle = currPath[pointId].drawColor\n            if (pointId === 0) {\n                ctx.moveTo(currPath[pointId].x, currPath[pointId].y)\n            } else {\n                ctx.lineTo(currPath[pointId].x, currPath[pointId].y)\n            }\n        }\n    }\n\n    const erease = (ctx, currPath) => {\n        ctx.globalCompositeOperation = 'destination-out'\n        ctx.beginPath()\n        for (let pointId = 0; pointId < currPath.length; pointId++) {\n            ctx.lineCap = 'round'\n            ctx.lineWidth = currPath[pointId].drawSize\n            if (pointId === 0) {\n                ctx.moveTo(currPath[pointId].x, currPath[pointId].y)\n            } else {\n                ctx.lineTo(currPath[pointId].x, currPath[pointId].y)\n            }\n        }\n    }\n\n    return (\n        <Canvas\n            id='drawing'\n            className='passthrough'\n            width={ width }\n            height={ height }\n            draw={ renderDrawingLayer } />\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        game: state.game,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Drawing)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Canvas from './Canvas'\n\nconst Fog = ({ game, metadata, settings }) => {\n    const fogOpacity = metadata.isHost ? settings.fogOpacity : 1\n    const width = game.width\n    const height = game.height\n\n    const getMap = () => {\n        if (game.maps.length === 0)\n            return undefined\n        const currMap = game.maps.filter((map) => parseInt(map.$id) === parseInt(game.mapId))\n        return currMap.length > 0 ? currMap[0] : game.maps[0]\n    }\n    const map = getMap()\n\n    const renderFogLayer = (ctx) => {\n        if (!map) {\n            return\n        }\n        if (!ctx)\n            return\n\n        ctx.beginPath()\n        ctx.globalCompositeOperation = 'destination-over'\n        ctx.fillStyle = 'black'\n        ctx.fillRect(0, 0, width, height)\n        for(let pathId = 0; pathId < map.fogPaths.length; pathId++) {\n            const currPath = map.fogPaths[pathId]\n            ereaseFog(ctx, currPath)\n            ctx.stroke()\n        }\n    }\n\n    const ereaseFog = (ctx, currPath) => {\n        ctx.beginPath()\n        ctx.globalCompositeOperation = 'destination-out'\n        let gradient\n        for (let pointId = 0; pointId < currPath.length; pointId++) {\n            gradient = ctx.createRadialGradient(currPath[pointId].x, currPath[pointId].y, currPath[pointId].r2 || 1, currPath[pointId].x, currPath[pointId].y, currPath[pointId].r*0.75)\n            gradient.addColorStop(0, 'rgba(0,0,0,255)')\n            gradient.addColorStop(1, 'rgba(0,0,0,0)')\n            ctx.fillStyle = gradient\n            ctx.fillRect(currPath[pointId].x-currPath[pointId].r, currPath[pointId].y-currPath[pointId].r, currPath[pointId].x+currPath[pointId].r, currPath[pointId].y+currPath[pointId].r)\n        }\n    }\n\n    return (\n        game.fogEnabled ?\n            <Canvas\n                id='fog'\n                className='passthrough'\n                style={{ opacity: fogOpacity }}\n                width={ width }\n                height={ height }\n                draw={ renderFogLayer } />\n            : null\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        game: state.game,\n        settings: state.settings,\n        metadata: state.metadata,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Fog)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Overlay = ({ game, overlayRef }) => {\n    const maps = game.maps\n    const map = maps[game.mapId] || undefined\n    const width = map ? map.width : game.width\n    const height = map ? map.height : game.height\n    const canvasRef = overlayRef\n\n    return (\n        <canvas\n            id='overlay'\n            ref={ canvasRef }\n            width={ width }\n            height={ height } />\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        game: state.game,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Overlay)\n","const TokenView = ({ divStyle, token, classes, imgStyle, onMouseDown }) => {\n    return (\n        <div style={ divStyle } title={ token.name } className={ classes.join(' ') } onMouseDown={ (e) => onMouseDown(e) }>\n            <img src={ token.url } alt={ token.name ||'' } style={ imgStyle } />\n        </div>\n    )\n}\n\nexport default TokenView\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { setTokenOrigin, updateTokens } from '../reducers/gameReducer'\nimport TokenView from '../views/TokenView'\n\nconst Token = ({ token, isHost, game, settings, updateTokens, setTokenOrigin }) => {\n    const isMoveTool = () => {\n        return settings.tool === 'move'\n    }\n\n    const onMouseDown = () => {\n        if (!isMoveTool())\n            return\n        if (!isHost && (!token.pc))\n            return\n        const updatedTokensWithSelection = game.tokens.map((currToken) => {\n            return {\n                ...currToken,\n                $selected: currToken.guid === token.guid ? true : false\n            }\n        })\n        updateTokens(updatedTokensWithSelection)\n        setTokenOrigin(token.guid, token.x, token.y)\n    }\n\n    if (!token.url || !token.url.trim())\n        return null\n\n    const classes = [\n        'token',\n        token.ko && 'dead',\n        token.pc ? 'pc' : 'npc',\n        token.$selected && 'selected',\n        isHost && !token.pc && 'grabbable',\n    ]\n    const divStyle = {\n        left: token.x || 0,\n        top: token.y || 0,\n    }\n    const imgStyle = {\n        width: token.width || undefined,\n        height: token.height || undefined,\n    }\n    const showToken = ((token.mapId === undefined) || (game.mapId === token.mapId))\n\n    return (\n        showToken ?\n            <TokenView\n                divStyle={ divStyle }\n                token={ token }\n                classes={ classes }\n                imgStyle={ imgStyle }\n                onMouseDown={ onMouseDown }\n            />\n            : null\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        game: state.game,\n        settings: state.settings,\n    }\n}\n\nconst mapDispatchToProps = {\n    updateTokens,\n    setTokenOrigin,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Token)\n","const Cursor = ({ cursor, size, name }) => {\n    const divStyle = {\n        top: cursor.y,\n        left: cursor.x,\n    }\n    const imgStyle = {\n        fontSize: size || undefined,\n    }\n\n    return (\n        <div style={ divStyle } className='cursor' >\n            <span role='img' aria-label='pointer' style={ imgStyle }>&#x1f5e1;</span>\n            { cursor.u || name }\n        </div>\n    )\n}\n\nexport default Cursor\n","function Button({ title, value, onClick, isSelected, style, disabled }) {\n    return (\n        <button title={ title } onClick={ onClick } className={ isSelected ? 'selected' : null } style={ style } disabled={ disabled }>\n            <span role='img' aria-label={ title }>{ value }</span>\n        </button>\n    )\n}\n\nexport default Button\n","import Button from '../views/Button'\n\nfunction ToggleButton({ controlPanelState, setControlPanelState, title, value }) {\n    const toggleKey = `toggleOn${title}`\n    const onClick = () => {\n        setControlPanelState({\n            ...controlPanelState,\n            [toggleKey]: !controlPanelState[toggleKey],\n        })\n    }\n    const isSelected = controlPanelState[toggleKey]\n    return (\n        <Button title={ title } value={ value } onClick={ onClick } isSelected={ isSelected } />\n    )\n}\n\nexport default ToggleButton\n","import Button from './Button.js'\n\nconst ToolControlsView = ({ tool, subtool, drawColor, setDrawColor, drawSize, setDrawSize, fogOpacity, setFogOpacity, fogRadius, setFogRadius, setSubtool, resetFog, resetDrawing }) => {\n    switch (tool) {\n    case 'draw':\n        return (\n            <span>\n                <Button title='eraser' value='&#x1f9fd;' onClick={ () => setSubtool('eraser') } isSelected={ subtool === 'eraser' } />\n                <Button title='pencil' value='&#x1f58d;' onClick={ () => setSubtool('pencil') } isSelected={ subtool === 'pencil' } />\n                <input size='3' title='draw size' value={ drawSize } onChange={ (e) => setDrawSize(e.target.value) } type='number' step='3' min='1' />\n                <input size='3' title='draw color' value={ drawColor } onChange={ (e) => setDrawColor(e.target.value) } />\n                <Button style={{ backgroundColor: drawColor }} value='&#x1f58c;' disabled />\n                <Button title='reset drawing' onClick={ resetDrawing } value='&#x1f300;' />\n            </span>\n        )\n    case 'move':\n        return null\n    case 'fog':\n        return (\n            <span>\n                <Button title='reset fog' onClick={ resetFog } value='&#x1f300;' />\n                <input size='3' title='fog radius' value={ fogRadius } onChange={ (e) => setFogRadius(e.target.value) } type='number' step='5' min='1' />\n                <input size='3' title='fog opacity' step='0.05' min='0' max='1' value={ fogOpacity } onChange={ (e) => setFogOpacity(e.target.value) } type='number' />\n            </span>\n        )\n    default:\n        return null\n    }\n}\n\nexport default ToolControlsView\n","import { connect } from 'react-redux'\nimport { setToolSettings, setDrawToolSettings, setFogToolSettings } from '../reducers/settingsReducer'\nimport { resetFog, resetDraw } from '../reducers/gameReducer'\nimport ToolControlsView from '../views/ToolControlsView'\n\nconst ToolControls = ({ settings, setToolSettings, setDrawToolSettings, setFogToolSettings, resetFog, resetDraw }) => {\n    const setSubtool = (subtool) => {\n        setToolSettings(settings.tool, subtool)\n    }\n\n    const setDrawColor = (value) => {\n        setDrawToolSettings(value, settings.drawSize)\n    }\n\n    const setDrawSize = (value) => {\n        const newSize = value\n        if (!isNaN(newSize))\n            setDrawToolSettings(settings.drawColor, newSize)\n    }\n\n    const setFogOpacity = (value) => {\n        const newOpacity = value\n        if (!isNaN(newOpacity))\n            setFogToolSettings(newOpacity, settings.fogRadius)\n    }\n\n    const setFogRadius = (value) => {\n        const newRadius = value\n        if (!isNaN(newRadius))\n            setFogToolSettings(settings.fogOpacity, newRadius)\n    }\n\n    const resetFogOnCurrentMap = () => {\n        resetFog()\n    }\n\n    const resetDrawOnCurrentMap = () => {\n        resetDraw()\n    }\n\n    return (\n        <ToolControlsView\n            tool={ settings.tool }\n            subtool={ settings.subtool }\n            drawColor={ settings.drawColor }\n            setDrawColor={ setDrawColor }\n            drawSize={ settings.drawSize }\n            setDrawSize={ setDrawSize }\n            fogOpacity={ settings.fogOpacity }\n            setFogOpacity={ setFogOpacity }\n            fogRadius={ settings.fogRadius }\n            setFogRadius={ setFogRadius }\n            setSubtool={ setSubtool }\n            resetFog={ resetFogOnCurrentMap }\n            resetDrawing={ resetDrawOnCurrentMap } />\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        settings: state.settings,\n    }\n}\n\nconst mapDispatchToProps = {\n    setToolSettings,\n    setDrawToolSettings,\n    setFogToolSettings,\n    resetFog,\n    resetDraw,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolControls)\n","import Button from './Button.js'\n\nconst MapConfigView = ({ isSelected, mapConfigState, load, onTextChange, onIntegerChange, deleteMap }) => {\n    return (\n        <div className={ isSelected ? 'selected' : null }>\n            { mapConfigState.name }\n            <input value={ mapConfigState.imageUrl || '' } placeholder='Map url' size='8' onChange={ (e) => onTextChange('imageUrl', e) } />\n            w:\n            <input value={ mapConfigState.width || 0 } placeholder='width' className='text3' onChange={ (e) => onIntegerChange('width', e) } type='number' min='0' step='10' title='width' />\n            h:\n            <input value={ mapConfigState.height || 0 } placeholder='height' className='text3' onChange={ (e) => onIntegerChange('height', e) } type='number' min='0' step='10' title='height' />\n            <Button title='Save & load map' value='&#x1f4c0;' onClick={ load } />\n            <Button title='Delete map' value='&#x1f5d1;' onClick={ deleteMap } />\n        </div>\n    )\n}\n\nexport default MapConfigView\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { loadMap, updateMaps, deleteMap } from '../reducers/gameReducer'\nimport { pushMapState, useWebSocket } from '../hooks/useSocket'\nimport MapConfigView from '../views/MapConfigView'\n\nconst initialMapConfigState = (map, game) => {\n    const existingMap = game.maps.filter((mapElement) => mapElement.$id === map.$id)\n    const currentMap = existingMap.length > 0 ? existingMap[0] : { name: undefined, imageUrl: undefined, w: undefined, h: undefined, }\n\n    return {\n        $id: parseInt(map.$id),\n        name: currentMap.name ? currentMap.name : map.name,\n        imageUrl: currentMap.imageUrl ? currentMap.imageUrl : '',\n        width: currentMap.width ? currentMap.width : window.innerWidth,\n        height: currentMap.height ? currentMap.height : window.innerHeight,\n        x: 0,\n        y: 0,\n    }\n}\n\nconst MapConfig = ({ map, game, loadMap, updateMaps, deleteMap }) => {\n    const [mapConfigState, setMapConfigState] = useState(initialMapConfigState(map, game))\n    const [webSocket, wsSettings] = useWebSocket()\n    const isSelected = game.mapId === map.$id\n\n    const onTextChange = (key, evt) => {\n        setMapConfigState({\n            ...mapConfigState,\n            [key]: evt.target.value,\n        })\n    }\n\n    const onIntegerChange = (key, evt) => {\n        const value = parseInt(evt.target.value) || undefined\n        setMapConfigState({\n            ...mapConfigState,\n            [key]: value,\n        })\n    }\n\n    const load = () => {\n        const updatedMaps = game.maps.map((currMap) => {\n            return map.$id === currMap.$id ? { ...currMap, imageUrl: mapConfigState.imageUrl, width: mapConfigState.width, height: mapConfigState.height, } : currMap\n        })\n        updateMaps(updatedMaps)\n        loadMap(map.$id)\n        pushMapState(webSocket, wsSettings, updatedMaps, map.$id)\n    }\n\n    const deleteCurrentMap = () => {\n        if (window.confirm('Delete map?')) {\n            deleteMap(map.$id)\n        }\n    }\n\n    return (\n        map ?\n            <MapConfigView\n                isSelected={ isSelected }\n                mapConfigState={ mapConfigState }\n                load={ load }\n                onTextChange={ onTextChange }\n                onIntegerChange={ onIntegerChange }\n                deleteMap={ deleteCurrentMap }\n            />\n            : null\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        game: state.game,\n    }\n}\n\nconst mapDispatchToProps = {\n    loadMap,\n    updateMaps,\n    deleteMap,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapConfig)\n","import MapConfig from '../components/MapConfig.js'\nimport Button from './Button.js'\n\nconst MapToolView = ({ maps, newMapName, setNewMapName, createMap }) => {\n    return (\n        <div>\n            <hr />\n            <div>\n                <input placeholder='New map name' onChange={ (e) => setNewMapName(e.target.value) } value={ newMapName } />\n                <Button title='Create new map' value='&#x2795;' onClick={ createMap } disabled={ newMapName === '' } />\n                { maps.map((map) => (\n                    <MapConfig key={ `map${map.$id}` } map={ map } />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default MapToolView\n","import { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { pushCreateMap, useWebSocket } from '../hooks/useSocket'\nimport { addMap } from '../reducers/gameReducer'\nimport MapToolView from '../views/MapToolView'\n\nconst MapTool = ({ toggleOnMaps, game, addMap }) => {\n    const [newMapName, setNewMapName] = useState('')\n    const [webSocket, wsSettings] = useWebSocket()\n\n    const maps = game.maps\n\n    const createMap = () => {\n        addMap(newMapName, window.innerWidth, window.innerHeight)\n        setNewMapName('')\n        pushCreateMap(webSocket, wsSettings, newMapName, window.innerWidth, window.innerHeight)\n    }\n\n    return (\n        toggleOnMaps ?\n            <MapToolView maps={ maps } newMapName={ newMapName } setNewMapName={ setNewMapName } createMap={ createMap } />\n            : null\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        game: state.game,\n    }\n}\n\nconst mapDispatchToProps = {\n    addMap,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapTool)\n","import Button from './Button.js'\n\nconst HostTokenConfigView = ({ maps, token, copy, onToggle, selectToken, onTextChange, onIntegerChange, onMapSelect, deleteToken }) => {\n    return (\n        <div className='tokenConfig'>\n            <Button title='Duplicate token' value='&#x1f46f;' onClick={ copy } />\n            <Button value={ token.pc ? '\\u{1f5a5}' : '\\u{1f464}' } onClick={ (e) => onToggle('pc', e) } title='pc/npc' />\n            <Button value={ token.$selected ? '\\u{2705}' : '\\u{274C}' } onClick={ (e) => selectToken(token, e) } title='(un)select' />\n            <Button value={ token.ko ? '\\u{1f940}' : '\\u{1f339}' } onClick={ (e) => onToggle('ko', e) } title='alive/dead' />\n            <input value={ token.name || '' } placeholder='Name' size='8' onChange={ (e) => onTextChange('name', e) } />\n            <input value={ token.url || '' } placeholder='Url' size='8' onChange={ (e) => onTextChange('url', e) } />\n            wh:\n            <input value={ token.width || '' } placeholder='w' className='text2' onChange={ (e) => onIntegerChange('width', e) } type='number' step='5' min='0' title='width' />\n            <input value={ token.height || '' } placeholder='h' className='text2' onChange={ (e) => onIntegerChange('height', e) } type='number' step='5' min='0' title='height' />\n            xy:\n            <input value={ token.x || '' } placeholder='x' className='text3' onChange={ (e) => onIntegerChange('x', e) } type='number' step='5' title='x coord' />\n            <input value={ token.y || '' } placeholder='y' className='text3' onChange={ (e) => onIntegerChange('y', e) } type='number' step='5' title='y coord' />\n            <select defaultValue={ token.mapId } onChange={ (e) => onMapSelect(e) } title='which map'>\n                <option key={ -1 } value={ -1 }>(all)</option>\n                { maps.map((map) => (\n                    <option key={ map.$id } value={ map.name }>{ maps.name }</option>\n                ))}\n            </select>\n            <Button title='Delete token' value='&#x1f5d1;' onClick={ deleteToken } />\n        </div>\n    )\n}\n\nexport default HostTokenConfigView\n","const GuestTokenConfigView = ({ token, onTextChange, onIntegerChange }) => {\n    return (\n        <div className='tokenConfig'>\n            <input value={ token.name || '' } placeholder='Name' size='8' onChange={ (e) => onTextChange('name', e) } />\n            <input value={ token.url || '' } placeholder='Url' size='8' onChange={ (e) => onTextChange('url', e) } />\n            wh:\n            <input value={ token.width || '' } placeholder='w' className='text2' onChange={ (e) => onIntegerChange('width', e) } type='number' step='5' min='0' title='width' />\n            <input value={ token.height || '' } placeholder='h' className='text2' onChange={ (e) => onIntegerChange('height', e) } type='number' step='5' min='0' title='height' />\n            xy:\n            <input value={ token.x || '' } placeholder='x' className='text3' onChange={ (e) => onIntegerChange('x', e) } type='number' step='5' title='x coord' />\n            <input value={ token.y || '' } placeholder='y' className='text3' onChange={ (e) => onIntegerChange('y', e) } type='number' step='5' title='y coord' />\n        </div>\n    )\n}\n\nexport default GuestTokenConfigView\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { deleteToken, copyToken, updateTokenValue, toggleTokenValue, updateTokens } from '../reducers/gameReducer'\nimport HostTokenConfig from '../views/HostTokenConfigView'\nimport GuestTokenConfigView from '../views/GuestTokenConfigView'\n\nconst TokenConfig = ({ token, game, metadata, deleteToken, copyToken, updateTokenValue, toggleTokenValue }) => {\n    const selectToken = (token) => {\n        if (!token.pc && !metadata.isHost)\n            return\n        toggleTokenValue(token.guid, '$selected')\n    }\n\n    const deleteCurrToken = () => {\n        deleteToken(token.guid)\n    }\n\n    const copy = () => {\n        copyToken(token.guid)\n    }\n\n    const onMapSelect = (e) => {\n        let value = parseInt(e.target.value)\n        if (value < 0)\n            value = undefined\n        updateTokenValue(token.guid, 'mapId', value)\n    }\n\n    const onToggle = (key) => {\n        toggleTokenValue(token.guid, key)\n    }\n\n    const onIntegerChange = (key, e) => {\n        updateTokenValue(token.guid, key, parseInt(e.target.value) || undefined)\n    }\n\n    const onTextChange = (key, e) => {\n        updateTokenValue(token.guid, key, e.target.value)\n    }\n\n    return (\n        <div>\n            { token ?\n                metadata.isHost ?\n                    <HostTokenConfig\n                        maps={ game.maps }\n                        token={ token }\n                        copy={ copy }\n                        onToggle={ onToggle }\n                        selectToken={ selectToken }\n                        onTextChange={ onTextChange }\n                        onIntegerChange={ onIntegerChange }\n                        onMapSelect={ onMapSelect }\n                        deleteToken={ deleteCurrToken }\n                    />\n                    :\n                    <GuestTokenConfigView\n                        token={ token }\n                        onTextChange={ onTextChange }\n                        onIntegerChange={ onIntegerChange }\n                    />\n                : null\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        game: state.game,\n        metadata: state.metadata,\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteToken,\n    copyToken,\n    updateTokenValue,\n    toggleTokenValue,\n    updateTokens,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TokenConfig)\n","import TokenConfig from '../components/TokenConfig.js'\nimport Button from './Button.js'\n\nconst TokenToolView = ({ newTokenUrl, setNewTokenUrl, createToken, tokens }) => {\n    return (\n        <div>\n            <hr />\n            <input placeholder='New token url' onChange={ (e) => setNewTokenUrl(e.target.value) } value={ newTokenUrl } />\n            <Button title='Create new token' value='&#x2795;' onClick={ createToken } />\n            { tokens.map((token, $i) => (\n                <TokenConfig key={ `token${$i}` } token={ token } />\n            ))}\n        </div>\n    )\n}\n\nexport default TokenToolView\n","import TokenConfig from '../components/TokenConfig.js'\n\nconst SelectedTokensControlsView = ({ tokens }) => {\n    const filteredTokens = tokens.filter(t => t.$selected)\n    return (\n        <div>\n            { filteredTokens.map((token, $i) => (\n                <TokenConfig key={ `token${$i}` } token={ token } />\n            ))}\n        </div>\n    )\n}\n\nexport default SelectedTokensControlsView\n","import { connect } from 'react-redux'\nimport SelectedTokensControlsView from '../views/SelectedTokensControlsView'\n\nconst SelectedTokensControls = ({ game }) => {\n    const filteredTokens = game.tokens.filter(t => t.$selected)\n    return (\n        <SelectedTokensControlsView tokens={ filteredTokens } />\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        game: state.game,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(SelectedTokensControls)\n","import { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addToken } from '../reducers/gameReducer'\nimport TokenToolView from '../views/TokenToolView'\nimport SelectedTokensControls from './SelectedTokensControls'\n\nconst TokenTool = ({ toggleOnTokens, game, addToken, metadata }) => {\n    const [newTokenUrl, setNewTokenUrl] = useState('')\n\n    if (!metadata.isHost)\n        return null\n\n    const createToken = () => {\n        if (!newTokenUrl)\n            return\n        addToken(undefined, newTokenUrl, game.mapId)\n        setNewTokenUrl('')\n    }\n\n    return (\n        toggleOnTokens ?\n            <TokenToolView newTokenUrl={ newTokenUrl } setNewTokenUrl={ setNewTokenUrl } createToken={ createToken } tokens={ game.tokens } /> :\n            <SelectedTokensControls tokens={ game.tokens } />\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        game: state.game,\n        metadata: state.metadata,\n    }\n}\n\nconst mapDispatchToProps = {\n    addToken,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TokenTool)\n","import Button from './Button.js'\n\nconst UserToolView = ({ initAsDev, toggleFog, copyJson, pasteJson, username, updateUsername, cursorSize, updateCursorSize }) => {\n    return (\n        <div>\n            <hr />\n            <input title='User name' placeholder='User name' value={ username} onChange={ (e) => updateUsername(e.target.value) } />\n            { /* TODO: enable the mousesharing <ToggleButton title='Share mouse (cursor)' value='&#x1f401;' controlPanelState={ controlPanelState } setControlPanelState={ setControlPanelState } /> */ }\n            <input title='Cursor size' value={ cursorSize } onChange={ (e) => updateCursorSize(e.target.value) } type='number' min='0' />\n            <hr />\n            <Button title='Redo as dev' value='&#x1f530;' onClick={ initAsDev } />\n            <Button title='Toggle fog' value='&#127787;' onClick={ toggleFog } />\n            <Button title='Copy JSON to clipboard' value='&#x1f46f;' onClick={ copyJson } />\n            <Button title='Paste JSON from clipboard' value='&#x1f4cb;' onClick={ pasteJson } />\n        </div>\n    )\n}\n\nexport default UserToolView\n","import { connect } from 'react-redux'\nimport { loadDefaultBattleGame, setFogEnabled } from '../reducers/gameReducer'\nimport { setUsername, setCursorSize, setToolSettings } from '../reducers/settingsReducer'\nimport { pushFogEnabled, useWebSocket } from '../hooks/useSocket'\nimport UserToolView from '../views/UserToolView'\n\nconst UserTool = ({ toggleOnUser, game, settings, setFogEnabled, setUsername, setCursorSize, setToolSettings, loadDefaultBattleGame }) => {\n    const [webSocket, wsSettings, setWsSettings] = useWebSocket()\n    if (!toggleOnUser)\n        return null\n\n    const updateUsername = (value) => {\n        setUsername(value)\n        setWsSettings({\n            ...wsSettings,\n            username: value,\n        })\n    }\n\n    const updateCursorSize = (value) => {\n        const newSize = value\n        if (!isNaN(newSize))\n            setCursorSize(newSize)\n    }\n\n    const initAsDev = () => {\n        const mapsExist = game.maps.length > 0\n        const tokensExist = game.tokens.length > 0\n        if ((mapsExist && tokensExist) && !window.confirm('Overwrite game with defaults?'))\n            return\n        loadDefaultBattleGame()\n    }\n\n    const toggleFog = () => {\n        setFogEnabled(!game.fogEnabled)\n        pushFogEnabled(webSocket, wsSettings, !game.fogEnabled)\n        if (settings.tool === 'fog')\n            setToolSettings('move','')\n    }\n\n    const copyJson = () => {\n        //TODO: Implement CopyJson\n        /*\n        const json = gameState.toJson()\n        window.navigator.clipboard.writeText(json).then(() => {\n            notify('copied to clipboard')\n        }).catch(err => {\n            console.error('failed to write to clipboard: ', err)\n            notify(`failed to write to clipboard: ${err}`, 2000)\n        })\n        */\n    }\n\n    const pasteJson = () => {\n        //TODO: Implement PasteJson\n        /*\n        const note1 = notify('reading clipboard...')\n        window.navigator.clipboard.readText().then(json => {\n            if (window.confirm(`Do you really want to overwrite this game with what's in your clipboard? ${json.slice(0,99)}...`)) {\n                fromJson(json)\n                notify('pasted from clipboard')\n            }\n            note1 && note1.close()\n        }).catch(err => {\n            console.error('failed to read clipboard: ', err)\n            notify(`failed to read clipboard: ${err}`, 2000)\n        })\n        */\n    }\n\n    return (\n        toggleOnUser ?\n            <UserToolView\n                initAsDev={ initAsDev }\n                toggleFog={ toggleFog }\n                copyJson={ copyJson }\n                pasteJson={ pasteJson }\n                username={ settings.username }\n                updateUsername={ updateUsername }\n                cursorSize={ settings.cursorSize }\n                updateCursorSize={ updateCursorSize } />\n            : null\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        game: state.game,\n        settings: state.settings,\n    }\n}\n\nconst mapDispatchToProps = {\n    setUsername,\n    setCursorSize,\n    setFogEnabled,\n    setToolSettings,\n    loadDefaultBattleGame,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserTool)\n","import { connect } from 'react-redux'\nimport { setToolSettings } from '../reducers/settingsReducer'\nimport Button from '../views/Button'\n\nfunction ToolButton({ title, value, settings, setToolSettings }) {\n    const isSelected = title === settings.tool\n    const onClick = () => {\n        setToolSettings(title, undefined)\n    }\n    return (\n        <Button title={ title } value={ value.toString() } onClick={ onClick } isSelected={ isSelected } />\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        settings: state.settings,\n    }\n}\n\nconst mapDispatchToProps = {\n    setToolSettings,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolButton)\n","import ToolButton from '../components/ToolButton.js'\n\nconst ToolSelectView = ({ fogEnabled }) => {\n    return (\n        <span id='tools'>\n            <ToolButton title='move' value='&#x1f9f3;' />\n            <ToolButton title='draw' value='&#x1f58d;' />\n            { fogEnabled ? <ToolButton title='fog'  value='&#x1f32c;' /> : null }\n        </span>\n    )\n}\n\nexport default ToolSelectView\n","import ToggleButton from '../components/ToggleButton.js'\nimport ToolControls from '../components/ToolControls.js'\nimport MapTool from '../components/MapTool.js'\nimport TokenTool from '../components/TokenTool.js'\nimport UserTool from '../components/UserTool.js'\nimport SelectedTokensControls from '../components/SelectedTokensControls.js'\nimport ToolSelectView from './ToolSelectView.js'\nimport Button from './Button.js'\n\nconst ControlPanelView = ({ controlPanelState, setControlPanelState, hidden, toggleHidden, fogEnabled, isHost, username, setUsername, cursorSize, setCursorSize, socketRequestRefresh, pushRefreshToPlayers }) => {\n    if (hidden)\n        return (\n            <div id='control-panel'>\n                &nbsp;&nbsp;&nbsp;&nbsp;\n                <Button value='&#x1f441;' onClick={ toggleHidden } title='show/hide control panel' />\n                &nbsp;&nbsp;&nbsp;&nbsp;\n            </div>\n        )\n\n    if (isHost)\n        return (\n            <div id='control-panel'>\n                &nbsp;&nbsp;&nbsp;&nbsp;\n                <Button value='&#x1f441;' onClick={ toggleHidden } title='show/hide control panel' />\n                &nbsp;&nbsp;&nbsp;&nbsp;\n                <ToggleButton title='User' value='&#x1f9d9;&#x200d;&#x2642;&#xfe0f;' controlPanelState={ controlPanelState } setControlPanelState={ setControlPanelState } />\n                <ToggleButton title='Maps' value='&#x1f5fa;' controlPanelState={ controlPanelState } setControlPanelState={ setControlPanelState } />\n                <ToggleButton title='Tokens' value='&#x265f;' controlPanelState={ controlPanelState } setControlPanelState={ setControlPanelState } />\n                <Button title='Push refresh to players' value='&#x1f4ab;' onClick={ pushRefreshToPlayers } />\n                &nbsp;&nbsp;&nbsp;&nbsp;\n                <ToolSelectView fogEnabled={ fogEnabled } />\n                &nbsp;&nbsp;&nbsp;&nbsp;\n                <ToolControls />\n                <MapTool toggleOnMaps={ controlPanelState.toggleOnMaps } />\n                <TokenTool toggleOnTokens={ controlPanelState.toggleOnTokens } />\n                <UserTool toggleOnUser={ controlPanelState.toggleOnUser } />\n            </div>\n        )\n    else\n        return (\n            <div id='control-panel'>\n                <Button value='&#x1f441;' onClick={ toggleHidden } title='show/hide control panel' />\n                <input title='User name' placeholder='User name' value={ username } onChange={ (e) => setUsername(e.target.value) } />\n                <ToggleButton title='Share mouse (cursor)' value='&#x1f401;' controlPanelState={ controlPanelState } setControlPanelState={ setControlPanelState } />\n                <input title='Cursor size' value={ cursorSize } onChange={ (e) => setCursorSize(parseInt(e.target.value)) } type='number' min='0' />\n                <Button title='Request gameboard refresh from host' onClick={ socketRequestRefresh } value='&#x1f4ab;' />\n                <SelectedTokensControls />\n            </div>\n        )\n}\n\nexport default ControlPanelView\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { setUsername, setCursorSize } from '../reducers/settingsReducer'\nimport { pushGameRefresh, requestRefresh, useWebSocket } from '../hooks/useSocket'\nimport ControlPanelView from '../views/ControlPanelView'\n\nconst initialControlPanelState = () => {\n    return {\n        hidden: false,\n        toggleOnMaps: false,\n        toggleOnUser: false,\n        toggleOnTokens: false,\n    }\n}\n\nconst ControlPanel = ({ game, settings, metadata, setUsername, setCursorSize }) => {\n    const [controlPanelState, setControlPanelState] = useState(initialControlPanelState)\n    const [webSocket, wsSettings, setWsSettings] = useWebSocket()\n\n    const toggleHidden = () => {\n        setControlPanelState({\n            ...controlPanelState,\n            hidden: !controlPanelState.hidden,\n        })\n    }\n\n    const updateUsername = (value) => {\n        setUsername(value)\n        setWsSettings({\n            ...wsSettings,\n            username: value,\n        })\n    }\n\n    const updateCursorSize = (value) => {\n        const newSize = value\n        if (!isNaN(newSize))\n            setCursorSize(newSize)\n    }\n\n    const socketRequestRefresh = () => {\n        requestRefresh(webSocket, wsSettings)\n    }\n\n    const pushRefreshToPlayers = () => {\n        pushGameRefresh(webSocket, wsSettings, game)\n    }\n\n    return (\n        <ControlPanelView\n            controlPanelState={ controlPanelState }\n            setControlPanelState={ setControlPanelState }\n            hidden={ controlPanelState.hidden }\n            toggleHidden={ toggleHidden }\n            fogEnabled={ game.fogEnabled }\n            isHost={ metadata.isHost }\n            username={ settings.username }\n            setUsername={ updateUsername }\n            cursorSize={ settings.cursorSize }\n            setCursorSize={ updateCursorSize }\n            socketRequestRefresh={ socketRequestRefresh }\n            pushRefreshToPlayers={ pushRefreshToPlayers } />\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        game: state.game,\n        settings: state.settings,\n        metadata: state.metadata,\n    }\n}\n\nconst mapDispatchToProps = {\n    setUsername,\n    setCursorSize,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlPanel)\n","import Background from '../components/Background.js'\nimport Drawing from '../components/Drawing.js'\nimport Fog from '../components/Fog.js'\nimport Overlay from '../components/Overlay.js'\nimport Token from '../components/Token.js'\nimport Cursor from './Cursor.js'\nimport ControlPanel from '../components/ControlPanel.js'\n\nconst GameView = ({ isHost, overlayRef, isFogLoaded, cursors, cursorSize, tokens, onMouseMove, onMouseUp, onMouseDown }) => {\n    const goneClass = isFogLoaded ? null : 'gone'\n\n    return (\n        <div id='game' onMouseMove={ (e) => onMouseMove(e) } onMouseDown={ (e) => onMouseDown(e) } onMouseUp={ (e) => onMouseUp(e) }>\n            <div className={ goneClass }>\n                <Background />\n                <Drawing />\n                { tokens ?\n                    <div id='tokens'>\n                        { tokens.map((token, $i) => (\n                            <Token key={ `Token${$i}` } token={ token } isHost={ isHost } />\n                        )) }\n                    </div>\n                    : null\n                }\n                <Fog />\n                { cursors ?\n                    <div id='cursors'>\n                        { cursors.map((cursor) => (\n                            <Cursor key={ `cursor${cursor.$id}` } name={ cursor.username } cursor={ cursor } size={ cursorSize } />\n                        )) }\n                    </div>\n                    : null\n                }\n                {/* Overlay: Holds outline for fog & draw tools */ }\n                <Overlay overlayRef={ overlayRef } />\n            </div>\n            <ControlPanel />\n        </div>\n    )\n}\n\nexport default GameView\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { connect } from 'react-redux'\nimport { setGameSettings } from '../reducers/metadataReducer'\nimport { overwriteGame, updateMaps, loadMap, addMap, incrementGen, setFogEnabled, updateTokens, toggleTokenValue } from '../reducers/gameReducer'\nimport { pushDrawPath, pushFogPath, pushGameRefresh, pushTokens, useWebSocket } from '../hooks/useSocket'\nimport GameView from '../views/GameView'\n\nconst Game = ({ metadata, game, settings, setGameSettings, overwriteGame, loadMap, updateMaps, addMap, updateTokens, toggleTokenValue, /*incrementGen, */ setFogEnabled }) => {\n    const overlayRef = React.useRef()\n    const [webSocket, wsSettings, setWsSettings] = useWebSocket()\n    const [mousePosition, setMousePosition] = useState({ downX: 0, downY: 0 })\n    let currentPath = []\n\n    /****************************************************\n     * Map Functions                                    *\n     ****************************************************/\n    const getMap = () => {\n        if (game.maps.length === 0)\n            return undefined\n        const currMap = game.maps.filter((map) => map.$id === game.mapId)\n        return currMap.length > 0 ? currMap[0] : game.maps[0]\n    }\n\n    /****************************************************\n     * Update Functions                                 *\n     ****************************************************/\n    /*\n    const updateCursors = (x, y, name, guid) => {\n        const cursors = Object.assign({}, gameState.metadata.cursors)\n        cursors[guid] = { x: x, y: y, time: new Date(), u: name }\n        setGameState({\n            ...gameState,\n            metadata: {\n                ...gameState.metadata,\n                cursors: cursors,\n            },\n        })\n    }\n    */\n\n    /****************************************************\n     * Control Functions                                *\n     ****************************************************/\n    const dragSelectedTokens = (e) => {\n        if (settings.tool !== 'move')\n            return\n\n        const selectedTokens = game.tokens.filter((token) => token.$selected)\n        if (selectedTokens.length > 0) {\n            const newTokens = game.tokens.map((token) => {\n                return !token.$selected ? token : {\n                    ...token,\n                    x: token.$x0 + (e.pageX - mousePosition.downX),\n                    y: token.$y0 + (e.pageY - mousePosition.downY),\n                }\n            })\n            updateTokens(newTokens)\n        }\n    }\n\n    /****************************************************\n     * Drawing Functions                                *\n     ****************************************************/\n    const setPointerOutline = (x, y, color, radius) => {\n        if (color === null)\n            return\n        const ctx = overlayRef.current.getContext('2d')\n        ctx.strokeStyle = color\n        ctx.lineWidth = '3'\n        ctx.beginPath()\n        ctx.arc(x, y, radius, 0, 2*Math.PI)\n        ctx.stroke()\n        ctx.closePath()\n    }\n\n    const updateCurrentDrawPath = () => {\n        const ctx = overlayRef.current.getContext('2d')\n        ctx.beginPath()\n        for (let pointId = 0; pointId < currentPath.length; pointId++) {\n            ctx.lineCap = 'round'\n            ctx.fillStyle = currentPath[pointId].drawColor\n            ctx.lineWidth = currentPath[pointId].drawSize\n            ctx.strokeStyle = currentPath[pointId].drawColor\n            if (pointId === 0) {\n                ctx.moveTo(currentPath[pointId].x, currentPath[pointId].y)\n            } else {\n                ctx.lineTo(currentPath[pointId].x, currentPath[pointId].y)\n            }\n        }\n        ctx.stroke()\n    }\n\n    const updateCurrentFogPath = () => {\n        const ctx = overlayRef.current.getContext('2d')\n        ctx.beginPath()\n        let gradient\n        for (let pointId = 0; pointId < currentPath.length; pointId++) {\n            gradient = ctx.createRadialGradient(currentPath[pointId].x, currentPath[pointId].y, currentPath[pointId].r2 || 1, currentPath[pointId].x, currentPath[pointId].y, currentPath[pointId].r*0.75)\n            ctx.lineCap = 'round'\n            gradient.addColorStop(0, 'rgba(255,255,255,255)')\n            gradient.addColorStop(1, 'rgba(255,255,255,0)')\n            ctx.fillStyle = gradient\n            ctx.fillRect(currentPath[pointId].x-currentPath[pointId].r, currentPath[pointId].y-currentPath[pointId].r, currentPath[pointId].x+currentPath[pointId].r, currentPath[pointId].y+currentPath[pointId].r)\n        }\n        ctx.stroke()\n    }\n\n    const clearOverlay = () => {\n        const ctx = overlayRef.current.getContext('2d')\n        if (!ctx)\n            return\n        ctx.clearRect(0, 0, game.width, game.height)\n    }\n\n    /****************************************************\n     * Event Handlers                                   *\n     ****************************************************/\n    /* Callback when the window resizes */\n    const onResize = () => {\n        //loadMap(null, true, true)\n    }\n\n    const onKeyDown = (/*e*/) => {\n        //TODO: Update onKeyDown function\n        /*\n        for (let x of [document.activeElement, e.target])\n            //TODO: Check if we can use triple equal\n            if (x.tagName == 'INPUT' && (x.type === 'text' || x.type === 'number')) // eslint-disable-line eqeqeq\n                return e\n\n        const moveFactor = e.shiftKey ? 100 : 10\n        const moveSelectedTokens = () => {\n            updateTokens(token => {\n                if (token.$selected) {\n                    switch (e.keyCode) {\n                        case 27: // escape\n                            token.$selected = false\n                            break\n                        case 37: // left\n                            token.x -= moveFactor\n                            break\n                        case 38: // up\n                            token.y -= moveFactor\n                            break\n                        case 39: // right\n                            token.x += moveFactor\n                            break\n                        case 40: // down\n                            token.y += moveFactor\n                            break\n                        default: return\n                    }\n                    e.preventDefault()\n                }\n                return token\n            })\n        }\n        switch (e.keyCode) {\n            case 27:\n            case 37:\n            case 38:\n            case 39:\n            case 40:\n                moveSelectedTokens(e)\n                break\n            default: return\n        }\n        */\n    }\n\n    /*\n    const onKeyPress = (e) => {\n        if (!gameState.metadata.isHost)\n            return e\n        for (let x of [document.activeElement, e.target])\n            //TODO: Check if we can use triple equal\n            if ((x.tagName == 'INPUT' && (x.type === 'text' || x.type === 'number')) || (x.tagName == 'BUTTON'))\n                return e\n\n        const cp = gameState.cpRef.current\n        switch(e.code) {\n            case 'KeyC':\n                if (e.shiftKey)\n                    cp.copyJson() // dump json to clipboard\n                break\n            case 'KeyH':\n                toggleControlPanelVisibility('hidden')\n                break\n            case 'KeyG':\n                setGameState({\n                    ...gameState,\n                    settings: {\n                        ...gameState.settings,\n                        tool: 'fog',\n                    },\n                })\n                break\n            case 'KeyL':\n                if (e.shiftKey)\n                    loadFromLocalStorage()\n                else\n                    saveToLocalStorage()\n                break\n            case 'KeyM':\n                toggleControlPanelVisibility('toggleOnMaps')\n                break\n            case 'KeyP':\n                setGameState({\n                    ...gameState,\n                    settings: {\n                        ...gameState.settings,\n                        tool: 'draw',\n                    },\n                })\n                break\n            case 'KeyT':\n                toggleControlPanelVisibility('toggleOnTokens')\n                break\n            case 'KeyV':\n                if (e.shiftKey)\n                    cp.pasteJson() // load json from clipboard\n                else\n                setGameState({\n                    ...gameState,\n                    settings: {\n                        ...gameState.settings,\n                        tool: 'move',\n                    },\n                })\n                break\n            default: return\n        }\n    }\n    */\n\n    const onMouseUp = (e) => {\n        setMousePosition({\n            downX: 0,\n            downY: 0,\n        })\n        const currMap = getMap()\n        if ((currMap) && (metadata.isHost) && (currentPath.length > 0)) {\n            const fogPaths = currMap.fogPaths\n            const drawPaths = currMap.drawPaths\n            switch (settings.tool) {\n            case 'fog':\n                fogPaths.push(currentPath)\n                pushFogPath(webSocket, wsSettings, currentPath)\n                break\n            case 'draw':\n                drawPaths.push(currentPath)\n                pushDrawPath(webSocket, wsSettings, currentPath)\n                break\n            default: break\n            }\n            currentPath = []\n            const updatedMaps = game.maps.map((map) => {\n                return map.$id === currMap.$id ? { ...currMap, fogPaths: fogPaths, drawPaths: drawPaths, } : map\n            })\n\n            updateMaps(updatedMaps)\n        }\n\n        const selectedTokens = game.tokens.filter((token) => token.$selected)\n        if (selectedTokens.length > 0) {\n            let deselectTokens = false\n            for (let x of [document.activeElement, e.target])\n                if (x.id.toUpperCase() === 'BACKGROUND')\n                    deselectTokens = true\n            if (deselectTokens)\n                game.tokens.map((token) => token.$selected ? toggleTokenValue(token.guid,'$selected') : null)\n\n            pushTokens(webSocket, wsSettings, game.tokens)\n        }\n    }\n\n    const onMouseDown = (e) => {\n        setMousePosition({\n            downX: parseInt(e.pageX),\n            downY: parseInt(e.pageY),\n        })\n\n        const selectedTokens = game.tokens.filter((token) => token.$selected)\n        if (selectedTokens.length > 0) {\n            let deselectTokens = false\n            for (let x of [document.activeElement, e.target])\n                if (x.id.toUpperCase() === 'BACKGROUND')\n                    deselectTokens = true\n            if (deselectTokens)\n                game.tokens.map((token) => token.$selected ? toggleTokenValue(token.guid,'$selected') : null)\n        }\n        for (let x of [document.activeElement, e.target])\n            if ((x.tagName.toUpperCase() === 'INPUT' && (x.type.toUpperCase() === 'TEXT' || x.type.toUpperCase() === 'NUMBER')) || (x.tagName.toUpperCase() === 'BUTTON'))\n                return e\n\n        if (metadata.isHost) {\n            if (e.buttons & 1) {\n                currentPath = []\n                currentPath.push({\n                    x: e.pageX,\n                    y: e.pageY,\n                    r: settings.fogRadius,\n                    r2: undefined,\n                    tool: currentTool(),\n                    drawColor: settings.drawColor,\n                    drawSize: settings.drawSize,\n                })\n            }\n        }\n    }\n\n    const onMouseMove = (e) => {\n        const overlay = overlayRef\n        if (!overlay)\n            return\n\n        clearOverlay()\n        let x = e.pageX, y = e.pageY\n        const currentlySelectedTool = metadata.isHost ? settings.tool : 'move'\n        switch (currentlySelectedTool) {\n        case 'fog':\n            updateCurrentFogPath()\n            setPointerOutline(x, y, 'yellow', settings.fogRadius)\n            break\n        case 'draw':\n            updateCurrentDrawPath()\n            setPointerOutline(x, y, settings.drawColor, settings.drawSize)\n            break\n        case 'move':\n            if (e.buttons & 1)\n                dragSelectedTokens(e)\n            break\n        default: break\n        }\n        if ((currentlySelectedTool === 'fog' || currentlySelectedTool === 'draw') && (e.buttons & 1)) {\n            currentPath.push({\n                x: x,\n                y: y,\n                r: settings.fogRadius,\n                r2: undefined,\n                tool: currentTool(),\n                drawColor: settings.drawColor,\n                drawSize: settings.drawSize,\n            })\n        }\n    }\n\n    const currentTool = () => {\n        const isEraser = settings.subtool === 'eraser'\n        switch (settings.tool) {\n        case 'draw':\n            if (isEraser) {\n                return 'erease'\n            } else {\n                return 'draw'\n            }\n        default:\n            return settings.tool\n        }\n    }\n\n    /****************************************************\n     * Helper Functions                                 *\n     ****************************************************/\n    /*\n    const notify = (msg, ttl, tag) => {\n        console.log(msg)\n        if (window.Notification) {\n            if (window.Notification.permission !== 'granted')\n                window.Notification.requestPermission()\n            else {\n                const note = new window.Notification(msg, { tag: tag })\n                setTimeout(() => note.close(), ttl || 1000)\n                return note\n            }\n        }\n    }\n    */\n\n    /*\n    const toJson = (additionalAttrs) => {\n        //TODO: rewrite toJson\n        const map = getMap()\n        incrementGen()\n        const tokens = game.tokens.map(token => ({...token}))\n        tokens.forEach(token => websocket.scrubObject(token))\n        const maps = game.maps\n        Object.values(maps).forEach(map => websocket.scrubObject(map))\n        const data = Object.assign({\n            gen: game.gen,\n            maps: maps,\n            mapId: map && map.$id,\n            tokens: tokens,\n        }, additionalAttrs)\n        return JSON.stringify(data)\n    }\n    */\n\n    /*\n    const fromJson = (json) => {\n        //TODO: rewrite fromJson\n        const data = Object.assign(JSON.parse(json)||{})\n        if (data.tokens) {\n            data.tokens.forEach(token => {\n                if (!token.guid) token.guid = guid()\n            })\n        }\n        return new Promise(resolve => {\n            setGameState({\n                ...gameState,\n                game: {\n                    ...gameState.game,\n                    data,\n                }\n            })\n            resolve()\n        })\n    }\n    */\n\n    const saveToLocalStorage = () => {\n        //TODO: Reenable after we've fixed toJson\n        /*\n        if (game.isFirstLoadDone) {\n            console.log('Saving game to local storage')\n            localStorage.setItem(metadata.room, toJson())\n        }\n        */\n    }\n\n    const loadFromLocalStorage = () => {\n        //TODO: reenable after we've fixed fromJson\n        /*\n        //TODO: Verify how come this does not work anymore\n        console.log('Loading game from local storage')\n        return fromJson(localStorage.getItem(metadata.room))\n        */\n    }\n\n    function handleError (ex) {\n        console.error(ex)\n        console.error('Exception in `render`. Clearing localStorage...')\n        localStorage.removeItem(metadata.room)\n        window.alert('Fatal error. Local storage cleared.')\n    }\n\n    /****************************************************\n     * Receiving Data                                   *\n     ****************************************************/\n    const receiveData = useCallback((evt) => {\n        let data = JSON.parse(evt.data)\n        if (data.from === wsSettings.guid) {\n            return // ignore messages sent by self\n        }\n        if (data.to && data.to !== wsSettings.guid) {\n            return // ignore messages sent to different recipients\n        }\n\n        const getMap = () => {\n            if (game.maps.length === 0)\n                return undefined\n            const currMap = game.maps.filter((map) => map.$id === game.mapId)\n            return currMap.length > 0 ? currMap[0] : game.maps[0]\n        }\n\n        const currMap = getMap()\n        let pathToUpdate = []\n        let updatedMaps = []\n        let updatedTokens = []\n        switch (data.type) {\n        case 'pushCursor':\n            /*\n            if (data.u !== this.gameState.settings.username)\n                this.gameState.updateCursors(data.x, data.y, data.u, data.from)\n            */\n            break\n        case 'pushDrawPath':\n            pathToUpdate = currMap.drawPaths ? currMap.drawPaths : []\n            pathToUpdate.push(data.drawPath)\n            updatedMaps = game.maps.map((map) => {\n                return map.$id === currMap.$id ? { ...currMap, drawPaths: pathToUpdate, } : map\n            })\n            updateMaps(updatedMaps)\n            break\n        case 'pushDrawReset':\n            updatedMaps = game.maps.map((map) => {\n                return map.$id === currMap.$id ? { ...currMap, drawPaths: [], } : map\n            })\n            updateMaps(updatedMaps)\n            break\n        case 'pushFogPath':\n            pathToUpdate = currMap.fogPaths ? currMap.fogPaths : []\n            pathToUpdate.push(data.fogPath)\n            updatedMaps = game.maps.map((map) => {\n                return map.$id === currMap.$id ? { ...currMap, fogPaths: pathToUpdate, } : map\n            })\n            updateMaps(updatedMaps)\n            break\n        case 'pushFogReset':\n            updatedMaps = game.maps.map((map) => {\n                return map.$id === currMap.$id ? { ...currMap, fogPaths: [], } : map\n            })\n            updateMaps(updatedMaps)\n            break\n        case 'pushSingleToken':\n            updatedTokens = game.tokens.map((token) => {\n                return token.guid !== data.token.guid ? token : {\n                    ...data.token,\n                    $selected: token.$selected,\n                }\n            })\n            updateTokens(updatedTokens)\n            break\n        case 'pushTokens':\n            updatedTokens = data.tokens.map((token) => {\n                let tokenSelected = false\n                const currentToken = game.tokens.filter((token2) => token2.guid === token.guid)\n                if (currentToken.length > 0)\n                    tokenSelected = currentToken.$selected\n                return { ...token, $selected: tokenSelected, }\n            })\n            updateTokens(updatedTokens)\n            break\n        case 'pushMapId':\n            loadMap(data.mapId)\n            break\n        case 'pushMapState':\n            updateMaps(data.maps)\n            loadMap(data.mapId)\n            break\n        case 'pushCreateMap':\n            addMap(data.mapName, data.width, data.height)\n            break\n        case 'pushFogEnabled':\n            setFogEnabled(data.fogEnabled)\n            break\n        case 'pushGameRefresh': // refresh from host\n            overwriteGame(data.game)\n            break\n        case 'requestRefresh': // refresh request from player\n            if (metadata.isHost) {\n                pushGameRefresh(webSocket, wsSettings, game, { to: data.from, })\n            }\n            break\n        default:\n            console.error(`Unrecognized websocket message type: ${data.type}`)\n        }\n    },[ game, metadata.isHost, loadMap, overwriteGame, setFogEnabled, updateMaps, addMap, updateTokens, webSocket, wsSettings ])\n\n    /****************************************************\n     * React Hooks                                      *\n     ****************************************************/\n    // On Mount\n    useEffect(() => {\n        window.addEventListener('beforeunload', saveToLocalStorage)\n        window.addEventListener('resize', onResize)\n        //TODO: reenable keypresses\n        //window.addEventListener('keypress', onKeyPress)\n        window.addEventListener('keydown', onKeyDown)\n        loadFromLocalStorage()\n        const params = new URLSearchParams(window.location.href.replace(/.*\\?/, ''))\n        setGameSettings(params.get('host'), params.get('room'))\n\n        // On Unmount\n        return () => {\n            saveToLocalStorage()\n            window.removeEventListener('beforeunload', saveToLocalStorage)\n            window.removeEventListener('resize', onResize)\n            //window.removeEventListener('keypress', onKeyPress)\n            window.removeEventListener('keydown', onKeyDown)\n        }\n    }, [])\n\n    useEffect(() => {\n        document.title = `Borealis D&D, Room: ${metadata.room}`\n    }, [ metadata.room ])\n\n    useEffect(() => {\n        if (webSocket) {\n            webSocket.addEventListener('message', receiveData)\n            if (wsSettings.username === '')\n                setWsSettings({ ...wsSettings, username: settings.username })\n        }\n\n        return () => {\n            if (webSocket)\n                webSocket.removeEventListener('message', receiveData)\n        }\n    }, [webSocket, wsSettings, setWsSettings, receiveData, settings.username])\n\n    /*\n    useEffect(() => {\n        if (websocket && gameState.settings.shareMouse)\n            websocket.pushCursor(gameState.metadata.lastX, gameState.metadata.lastY)\n    }, [gameState.metadata.lastX, gameState.metadata.lastY, gameState.settings.shareMouse])\n    */\n\n    /****************************************************\n     * Component Render                                 *\n     ****************************************************/\n    const deadline = new Date() - 30000\n    const cursorsCopy = metadata.cursors\n\n    for (let name in cursorsCopy) {\n        let time = cursorsCopy[name].time\n        if (!time || time < deadline)\n            delete cursorsCopy[name]\n    }\n\n    try {\n        return (\n            <GameView\n                isHost={ metadata.isHost }\n                overlayRef={ overlayRef }\n                isFogLoaded={ game.isFogLoaded }\n                cursors={ cursorsCopy }\n                cursorSize={ settings.cursorSize }\n                tokens={ game.tokens }\n                onMouseMove={ onMouseMove }\n                onMouseUp={ onMouseUp }\n                onMouseDown={ onMouseDown }\n                /* TODO: reenable notify={ notify } */\n            />\n        )\n    } catch (ex) {\n        handleError(ex)\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        metadata: state.metadata,\n        game: state.game,\n        settings: state.settings,\n    }\n}\n\nconst mapDispatchToProps = {\n    setGameSettings,\n    overwriteGame,\n    loadMap,\n    updateMaps,\n    addMap,\n    incrementGen,\n    setFogEnabled,\n    updateTokens,\n    toggleTokenValue,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game)\n","import React from 'react'\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport settingsReducer from '../reducers/settingsReducer'\nimport metadataReducer from '../reducers/metadataReducer'\nimport gameReducer from '../reducers/gameReducer'\nimport WebSocketProvider from '../contexts/WebSocketProvider'\nimport Game from './Game'\n\nconst App = () => {\n    const combinedReducer = combineReducers({\n        settings: settingsReducer,\n        metadata: metadataReducer,\n        game: gameReducer,\n    })\n    const store = createStore(combinedReducer)\n\n    return(\n        <Provider store={ store } >\n            <WebSocketProvider>\n                <Game />\n            </WebSocketProvider>\n        </Provider>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker === null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.')\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType !== null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.css'\nimport './styles/Game.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker.js'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}